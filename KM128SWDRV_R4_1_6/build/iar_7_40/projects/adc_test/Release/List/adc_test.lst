###############################################################################
#
# IAR ANSI C/C++ Compiler V7.40.3.8902/W32 for ARM        14/Apr/2017  12:33:04
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        C:\Freescale\KM128SWDRV_R4_1_6\src\projects\adc_test\adc_test.c
#    Command line =  
#        C:\Freescale\KM128SWDRV_R4_1_6\src\projects\adc_test\adc_test.c -D
#        NDEBUG -lCN
#        C:\Freescale\KM128SWDRV_R4_1_6\build\iar_7_40\projects\adc_test\Release\List\
#        -o
#        C:\Freescale\KM128SWDRV_R4_1_6\build\iar_7_40\projects\adc_test\Release\Obj\
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M0+ --no_mem_idioms -e --fpu=None --dlib_config
#        D:\IAR7.4anzhuang\arm\INC\c\DLib_Config_Normal.h -I
#        C:\Freescale\KM128SWDRV_R4_1_6\build\iar_7_40\projects\adc_test\..\..\..\..\src\common\
#        -I
#        C:\Freescale\KM128SWDRV_R4_1_6\build\iar_7_40\projects\adc_test\..\..\..\..\src\drivers\
#        -I
#        C:\Freescale\KM128SWDRV_R4_1_6\build\iar_7_40\projects\adc_test\..\..\..\..\src\freemaster\
#        -I
#        C:\Freescale\KM128SWDRV_R4_1_6\build\iar_7_40\projects\adc_test\..\..\..\..\src\projects\adc_test\
#        -I
#        C:\Freescale\KM128SWDRV_R4_1_6\build\iar_7_40\projects\adc_test\..\..\..\..\src\toolchain\iar\
#        -Ol --require_prototypes
#    List file    =  
#        C:\Freescale\KM128SWDRV_R4_1_6\build\iar_7_40\projects\adc_test\Release\List\adc_test.lst
#    Object file  =  
#        C:\Freescale\KM128SWDRV_R4_1_6\build\iar_7_40\projects\adc_test\Release\Obj\adc_test.o
#
###############################################################################

C:\Freescale\KM128SWDRV_R4_1_6\src\projects\adc_test\adc_test.c
      1          /******************************************************************************
      2           * (c) Copyright 2010-2015, Freescale Semiconductor Inc.
      3           * ALL RIGHTS RESERVED.
      4           ******************************************************************************
      5           * adc_test.c
      6           ******************************************************************************/
      7          #include "drivers.h"
      8          //#include "modbus.h"
      9          

   \                                 In section .bss, align 4
     10          static volatile float tmp16;
   \                     tmp16:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     11           float voltage3;
   \                     voltage3:
   \   00000000                      DS8 4
     12          

   \                                 In section .text, align 4, keep-with-next
     13          void main (void)
     14          {
   \                     main: (+1)
   \   00000000   0xB500             PUSH     {LR}
   \   00000002   0xB091             SUB      SP,SP,#+68
     15            SIM_Init (SIM_MODULE_ALL_PERIPH_ON_CONFIG);
   \   00000004   0x4668             MOV      R0,SP
   \   00000006   0x494B             LDR      R1,??main_0+0x4
   \   00000008   0x2228             MOVS     R2,#+40
   \   0000000A   0x.... 0x....      BL       __aeabi_memcpy4
   \   0000000E   0x9800             LDR      R0,[SP, #+0]
   \   00000010   0x4949             LDR      R1,??main_0+0x8  ;; 0x4003e000
   \   00000012   0x6008             STR      R0,[R1, #+0]
   \   00000014   0x4668             MOV      R0,SP
   \   00000016   0x4949             LDR      R1,??main_0+0xC
   \   00000018   0x2228             MOVS     R2,#+40
   \   0000001A   0x.... 0x....      BL       __aeabi_memcpy4
   \   0000001E   0x9801             LDR      R0,[SP, #+4]
   \   00000020   0x4947             LDR      R1,??main_0+0x10  ;; 0x4003e004
   \   00000022   0x6008             STR      R0,[R1, #+0]
   \   00000024   0x4668             MOV      R0,SP
   \   00000026   0x4947             LDR      R1,??main_0+0x14
   \   00000028   0x2228             MOVS     R2,#+40
   \   0000002A   0x.... 0x....      BL       __aeabi_memcpy4
   \   0000002E   0x9802             LDR      R0,[SP, #+8]
   \   00000030   0x4945             LDR      R1,??main_0+0x18  ;; 0x4003f004
   \   00000032   0x6008             STR      R0,[R1, #+0]
   \   00000034   0x4668             MOV      R0,SP
   \   00000036   0x4945             LDR      R1,??main_0+0x1C
   \   00000038   0x2228             MOVS     R2,#+40
   \   0000003A   0x.... 0x....      BL       __aeabi_memcpy4
   \   0000003E   0x9803             LDR      R0,[SP, #+12]
   \   00000040   0x4943             LDR      R1,??main_0+0x20  ;; 0x78000020
   \   00000042   0x4301             ORRS     R1,R1,R0
   \   00000044   0x4843             LDR      R0,??main_0+0x24  ;; 0x4003f034
   \   00000046   0x6001             STR      R1,[R0, #+0]
   \   00000048   0x4668             MOV      R0,SP
   \   0000004A   0x4943             LDR      R1,??main_0+0x28
   \   0000004C   0x2228             MOVS     R2,#+40
   \   0000004E   0x.... 0x....      BL       __aeabi_memcpy4
   \   00000052   0x9804             LDR      R0,[SP, #+16]
   \   00000054   0x4941             LDR      R1,??main_0+0x2C  ;; 0x4003f038
   \   00000056   0x6008             STR      R0,[R1, #+0]
   \   00000058   0x4668             MOV      R0,SP
   \   0000005A   0x4941             LDR      R1,??main_0+0x30
   \   0000005C   0x2228             MOVS     R2,#+40
   \   0000005E   0x.... 0x....      BL       __aeabi_memcpy4
   \   00000062   0x9805             LDR      R0,[SP, #+20]
   \   00000064   0x2180             MOVS     R1,#+128
   \   00000066   0x0609             LSLS     R1,R1,#+24       ;; #-2147483648
   \   00000068   0x4301             ORRS     R1,R1,R0
   \   0000006A   0x483E             LDR      R0,??main_0+0x34  ;; 0x4003f03c
   \   0000006C   0x6001             STR      R1,[R0, #+0]
   \   0000006E   0x4668             MOV      R0,SP
   \   00000070   0x493D             LDR      R1,??main_0+0x38
   \   00000072   0x2228             MOVS     R2,#+40
   \   00000074   0x.... 0x....      BL       __aeabi_memcpy4
   \   00000078   0x9806             LDR      R0,[SP, #+24]
   \   0000007A   0x493C             LDR      R1,??main_0+0x3C  ;; 0x4003f040
   \   0000007C   0x6008             STR      R0,[R1, #+0]
   \   0000007E   0x4668             MOV      R0,SP
   \   00000080   0x493B             LDR      R1,??main_0+0x40
   \   00000082   0x2228             MOVS     R2,#+40
   \   00000084   0x.... 0x....      BL       __aeabi_memcpy4
   \   00000088   0x9807             LDR      R0,[SP, #+28]
   \   0000008A   0x493A             LDR      R1,??main_0+0x44  ;; 0x4003f044
   \   0000008C   0x6008             STR      R0,[R1, #+0]
   \   0000008E   0x4668             MOV      R0,SP
   \   00000090   0x4939             LDR      R1,??main_0+0x48
   \   00000092   0x2228             MOVS     R2,#+40
   \   00000094   0x.... 0x....      BL       __aeabi_memcpy4
   \   00000098   0x9808             LDR      R0,[SP, #+32]
   \   0000009A   0x4938             LDR      R1,??main_0+0x4C  ;; 0x4003f04c
   \   0000009C   0x6008             STR      R0,[R1, #+0]
   \   0000009E   0x4668             MOV      R0,SP
   \   000000A0   0x4937             LDR      R1,??main_0+0x50
   \   000000A2   0x2228             MOVS     R2,#+40
   \   000000A4   0x.... 0x....      BL       __aeabi_memcpy4
   \   000000A8   0x9809             LDR      R0,[SP, #+36]
   \   000000AA   0x4936             LDR      R1,??main_0+0x54  ;; 0x4003f06c
   \   000000AC   0x6008             STR      R0,[R1, #+0]
     16            ADC_Init (ADC_MODULE_16B_SWTRG_XREF_CONFIG,
     17                      HWAVG_32,
     18                      ADC_CH_SE_POLL_CONFIG(AD3),
     19                      ADC_CH_DISABLE_CONFIG,
     20                      ADC_CH_DISABLE_CONFIG,
     21                      ADC_CH_DISABLE_CONFIG,
     22                      PRI_LVL0, NULL);
   \   000000AE   0x221C             MOVS     R2,#+28
   \   000000B0   0x2100             MOVS     R1,#+0
   \   000000B2   0xA80A             ADD      R0,SP,#+40
   \   000000B4   0x.... 0x....      BL       memset
   \   000000B8   0xA80A             ADD      R0,SP,#+40
   \   000000BA   0x4933             LDR      R1,??main_0+0x58
   \   000000BC   0x221C             MOVS     R2,#+28
   \   000000BE   0x.... 0x....      BL       __aeabi_memcpy4
   \   000000C2   0x2000             MOVS     R0,#+0
   \   000000C4   0x9009             STR      R0,[SP, #+36]
   \   000000C6   0x2000             MOVS     R0,#+0
   \   000000C8   0x9008             STR      R0,[SP, #+32]
   \   000000CA   0x4830             LDR      R0,??main_0+0x5C
   \   000000CC   0x6800             LDR      R0,[R0, #+0]
   \   000000CE   0x9007             STR      R0,[SP, #+28]
   \   000000D0   0x482F             LDR      R0,??main_0+0x60
   \   000000D2   0x6800             LDR      R0,[R0, #+0]
   \   000000D4   0x9006             STR      R0,[SP, #+24]
   \   000000D6   0x482F             LDR      R0,??main_0+0x64
   \   000000D8   0x6800             LDR      R0,[R0, #+0]
   \   000000DA   0x9005             STR      R0,[SP, #+20]
   \   000000DC   0x482E             LDR      R0,??main_0+0x68
   \   000000DE   0x6800             LDR      R0,[R0, #+0]
   \   000000E0   0x9004             STR      R0,[SP, #+16]
   \   000000E2   0x2003             MOVS     R0,#+3
   \   000000E4   0x9003             STR      R0,[SP, #+12]
   \   000000E6   0xA90A             ADD      R1,SP,#+40
   \   000000E8   0xB084             SUB      SP,SP,#+16
   \   000000EA   0x4668             MOV      R0,SP
   \   000000EC   0x221C             MOVS     R2,#+28
   \   000000EE   0x.... 0x....      BL       __aeabi_memcpy4
   \   000000F2   0xBC0F             POP      {R0-R3}
   \   000000F4   0x.... 0x....      BL       ADC_Init
     23            while (1)
     24            {
     25              if (ADC_Ready(CHA))
   \                     ??main_1: (+1)
   \   000000F8   0x4828             LDR      R0,??main_0+0x6C  ;; 0x4002b000
   \   000000FA   0x6800             LDR      R0,[R0, #+0]
   \   000000FC   0x0600             LSLS     R0,R0,#+24
   \   000000FE   0xD5FB             BPL      ??main_1
     26              {
     27                tmp16 = ADC_Read(CHA);
   \   00000100   0x4827             LDR      R0,??main_0+0x70  ;; 0x4002b018
   \   00000102   0x6800             LDR      R0,[R0, #+0]
   \   00000104   0xB280             UXTH     R0,R0
   \   00000106   0x.... 0x....      BL       __aeabi_ui2f
   \   0000010A   0x4927             LDR      R1,??main_0+0x78
   \   0000010C   0x6008             STR      R0,[R1, #+0]
     28                ADC_Start(CHA,AD3);
   \   0000010E   0x2000             MOVS     R0,#+0
   \   00000110   0x4924             LDR      R1,??main_0+0x74  ;; 0x5022b000
   \   00000112   0x6008             STR      R0,[R1, #+0]
     29                voltage3=tmp16*(3.323/65535);
   \   00000114   0x4824             LDR      R0,??main_0+0x78
   \   00000116   0x6800             LDR      R0,[R0, #+0]
   \   00000118   0x.... 0x....      BL       __aeabi_f2d
   \   0000011C   0xA223             ADR      R2,??main_0+0x7C
   \   0000011E   0xCA0C             LDM      R2,{R2,R3}
   \   00000120   0x.... 0x....      BL       __aeabi_dmul
   \   00000124   0x.... 0x....      BL       __aeabi_d2f
   \   00000128   0x4901             LDR      R1,??main_0
   \   0000012A   0x6008             STR      R0,[R1, #+0]
   \   0000012C   0xE7E4             B        ??main_1
   \   0000012E   0xBF00             Nop      
   \                     ??main_0:
   \   00000130   0x........         DC32     voltage3
   \   00000134   0x........         DC32     ?_0
   \   00000138   0x4003E000         DC32     0x4003e000
   \   0000013C   0x........         DC32     ?_1
   \   00000140   0x4003E004         DC32     0x4003e004
   \   00000144   0x........         DC32     ?_2
   \   00000148   0x4003F004         DC32     0x4003f004
   \   0000014C   0x........         DC32     ?_3
   \   00000150   0x78000020         DC32     0x78000020
   \   00000154   0x4003F034         DC32     0x4003f034
   \   00000158   0x........         DC32     ?_4
   \   0000015C   0x4003F038         DC32     0x4003f038
   \   00000160   0x........         DC32     ?_5
   \   00000164   0x4003F03C         DC32     0x4003f03c
   \   00000168   0x........         DC32     ?_6
   \   0000016C   0x4003F040         DC32     0x4003f040
   \   00000170   0x........         DC32     ?_7
   \   00000174   0x4003F044         DC32     0x4003f044
   \   00000178   0x........         DC32     ?_8
   \   0000017C   0x4003F04C         DC32     0x4003f04c
   \   00000180   0x........         DC32     ?_9
   \   00000184   0x4003F06C         DC32     0x4003f06c
   \   00000188   0x........         DC32     ?_10
   \   0000018C   0x........         DC32     ?_14
   \   00000190   0x........         DC32     ?_13
   \   00000194   0x........         DC32     ?_12
   \   00000198   0x........         DC32     ?_11
   \   0000019C   0x4002B000         DC32     0x4002b000
   \   000001A0   0x4002B018         DC32     0x4002b018
   \   000001A4   0x5022B000         DC32     0x5022b000
   \   000001A8   0x........         DC32     tmp16
   \   000001AC   0x9BC078EF         DC32     0x9BC078EF,0x3F0A959B
   \              0x3F0A959B   
     30                //voltage=voltage/10;
     31              }
     32             
     33            }
     34          }

   \                                 In section .rodata, align 4
   \                     ?_0:
   \   00000000   0x00000000         DC32 0, 0, 1, 7126482, 128679880, 1343318559, 3, 134217728, 0, 0
   \              0x00000000   
   \              0x00000001   
   \              0x006CBDD2   
   \              0x07AB7FC8   
   \              0x50116A1F   
   \              0x00000003   
   \              0x08000000   
   \              0x00000000   
   \              0x00000000   

   \                                 In section .rodata, align 4
   \                     ?_1:
   \   00000000   0x00000000         DC32 0, 0, 1, 7126482, 128679880, 1343318559, 3, 134217728, 0, 0
   \              0x00000000   
   \              0x00000001   
   \              0x006CBDD2   
   \              0x07AB7FC8   
   \              0x50116A1F   
   \              0x00000003   
   \              0x08000000   
   \              0x00000000   
   \              0x00000000   

   \                                 In section .rodata, align 4
   \                     ?_2:
   \   00000000   0x00000000         DC32 0, 0, 1, 7126482, 128679880, 1343318559, 3, 134217728, 0, 0
   \              0x00000000   
   \              0x00000001   
   \              0x006CBDD2   
   \              0x07AB7FC8   
   \              0x50116A1F   
   \              0x00000003   
   \              0x08000000   
   \              0x00000000   
   \              0x00000000   

   \                                 In section .rodata, align 4
   \                     ?_3:
   \   00000000   0x00000000         DC32 0, 0, 1, 7126482, 128679880, 1343318559, 3, 134217728, 0, 0
   \              0x00000000   
   \              0x00000001   
   \              0x006CBDD2   
   \              0x07AB7FC8   
   \              0x50116A1F   
   \              0x00000003   
   \              0x08000000   
   \              0x00000000   
   \              0x00000000   

   \                                 In section .rodata, align 4
   \                     ?_4:
   \   00000000   0x00000000         DC32 0, 0, 1, 7126482, 128679880, 1343318559, 3, 134217728, 0, 0
   \              0x00000000   
   \              0x00000001   
   \              0x006CBDD2   
   \              0x07AB7FC8   
   \              0x50116A1F   
   \              0x00000003   
   \              0x08000000   
   \              0x00000000   
   \              0x00000000   

   \                                 In section .rodata, align 4
   \                     ?_5:
   \   00000000   0x00000000         DC32 0, 0, 1, 7126482, 128679880, 1343318559, 3, 134217728, 0, 0
   \              0x00000000   
   \              0x00000001   
   \              0x006CBDD2   
   \              0x07AB7FC8   
   \              0x50116A1F   
   \              0x00000003   
   \              0x08000000   
   \              0x00000000   
   \              0x00000000   

   \                                 In section .rodata, align 4
   \                     ?_6:
   \   00000000   0x00000000         DC32 0, 0, 1, 7126482, 128679880, 1343318559, 3, 134217728, 0, 0
   \              0x00000000   
   \              0x00000001   
   \              0x006CBDD2   
   \              0x07AB7FC8   
   \              0x50116A1F   
   \              0x00000003   
   \              0x08000000   
   \              0x00000000   
   \              0x00000000   

   \                                 In section .rodata, align 4
   \                     ?_7:
   \   00000000   0x00000000         DC32 0, 0, 1, 7126482, 128679880, 1343318559, 3, 134217728, 0, 0
   \              0x00000000   
   \              0x00000001   
   \              0x006CBDD2   
   \              0x07AB7FC8   
   \              0x50116A1F   
   \              0x00000003   
   \              0x08000000   
   \              0x00000000   
   \              0x00000000   

   \                                 In section .rodata, align 4
   \                     ?_8:
   \   00000000   0x00000000         DC32 0, 0, 1, 7126482, 128679880, 1343318559, 3, 134217728, 0, 0
   \              0x00000000   
   \              0x00000001   
   \              0x006CBDD2   
   \              0x07AB7FC8   
   \              0x50116A1F   
   \              0x00000003   
   \              0x08000000   
   \              0x00000000   
   \              0x00000000   

   \                                 In section .rodata, align 4
   \                     ?_9:
   \   00000000   0x00000000         DC32 0, 0, 1, 7126482, 128679880, 1343318559, 3, 134217728, 0, 0
   \              0x00000000   
   \              0x00000001   
   \              0x006CBDD2   
   \              0x07AB7FC8   
   \              0x50116A1F   
   \              0x00000003   
   \              0x08000000   
   \              0x00000000   
   \              0x00000000   

   \                                 In section .rodata, align 4
   \                     ?_10:
   \   00000000   0x0000007C         DC32 124, 4, 0, 0, 0, 0, 0
   \              0x00000004   
   \              0x00000000   
   \              0x00000000   
   \              0x00000000   
   \              0x00000000   
   \              0x00000000   

   \                                 In section .rodata, align 4
   \                     ?_11:
   \   00000000   0x00000000         DC32 0

   \                                 In section .rodata, align 4
   \                     ?_12:
   \   00000000   0x0000001F         DC32 31

   \                                 In section .rodata, align 4
   \                     ?_13:
   \   00000000   0x0000001F         DC32 31

   \                                 In section .rodata, align 4
   \                     ?_14:
   \   00000000   0x0000001F         DC32 31

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      88   main
        72   -> ADC_Init
        72   -> __aeabi_d2f
        72   -> __aeabi_dmul
        72   -> __aeabi_f2d
        72   -> __aeabi_memcpy4
        88   -> __aeabi_memcpy4
        72   -> __aeabi_ui2f
        72   -> memset


   Section sizes:

   Bytes  Function/Label
   -----  --------------
      40  ?_0
      40  ?_1
      28  ?_10
       4  ?_11
       4  ?_12
       4  ?_13
       4  ?_14
      40  ?_2
      40  ?_3
      40  ?_4
      40  ?_5
      40  ?_6
      40  ?_7
      40  ?_8
      40  ?_9
     436  main
       4  tmp16
       4  voltage3

 
   8 bytes in section .bss
 444 bytes in section .rodata
 436 bytes in section .text
 
 436 bytes of CODE  memory
 444 bytes of CONST memory
   8 bytes of DATA  memory

Errors: none
Warnings: none
