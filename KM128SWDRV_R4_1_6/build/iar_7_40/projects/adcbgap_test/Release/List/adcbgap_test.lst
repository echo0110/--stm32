###############################################################################
#
# IAR ANSI C/C++ Compiler V7.40.3.8902/W32 for ARM        31/Mar/2017  15:43:01
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        C:\Freescale\KM128SWDRV_R4_1_6\src\projects\adcbgap_test\adcbgap_test.c
#    Command line =  
#        C:\Freescale\KM128SWDRV_R4_1_6\src\projects\adcbgap_test\adcbgap_test.c
#        --no_size_constraints -D NDEBUG -lCN
#        C:\Freescale\KM128SWDRV_R4_1_6\build\iar_7_40\projects\adcbgap_test\Release\List\
#        -o
#        C:\Freescale\KM128SWDRV_R4_1_6\build\iar_7_40\projects\adcbgap_test\Release\Obj\
#        --no_unroll --debug --endian=little --cpu=Cortex-M0+ --no_mem_idioms
#        -e --fpu=None --dlib_config
#        D:\IAR7.4anzhuang\arm\INC\c\DLib_Config_Normal.h -I
#        C:\Freescale\KM128SWDRV_R4_1_6\build\iar_7_40\projects\adcbgap_test\..\..\..\..\src\common\
#        -I
#        C:\Freescale\KM128SWDRV_R4_1_6\build\iar_7_40\projects\adcbgap_test\..\..\..\..\src\drivers\
#        -I
#        C:\Freescale\KM128SWDRV_R4_1_6\build\iar_7_40\projects\adcbgap_test\..\..\..\..\src\freemaster\
#        -I
#        C:\Freescale\KM128SWDRV_R4_1_6\build\iar_7_40\projects\adcbgap_test\..\..\..\..\src\projects\adcbgap_test\
#        -I
#        C:\Freescale\KM128SWDRV_R4_1_6\build\iar_7_40\projects\adcbgap_test\..\..\..\..\src\toolchain\iar\
#        -Ohs --require_prototypes
#    List file    =  
#        C:\Freescale\KM128SWDRV_R4_1_6\build\iar_7_40\projects\adcbgap_test\Release\List\adcbgap_test.lst
#    Object file  =  
#        C:\Freescale\KM128SWDRV_R4_1_6\build\iar_7_40\projects\adcbgap_test\Release\Obj\adcbgap_test.o
#
###############################################################################

C:\Freescale\KM128SWDRV_R4_1_6\src\projects\adcbgap_test\adcbgap_test.c
      1          /******************************************************************************
      2           * (c) Copyright 2010-2015, Freescale Semiconductor Inc.
      3           * ALL RIGHTS RESERVED.
      4           ******************************************************************************
      5           * adcbgap_test.c
      6           ******************************************************************************/
      7          #include "drivers.h"
      8          

   \                                 In section .bss, align 2
      9          static volatile uint16 ad10_value;
   \                     ad10_value:
   \   00000000                      DS8 2
     10          

   \                                 In section .text, align 4, keep-with-next
     11          void main (void)
     12          {
   \                     main: (+1)
   \   00000000   0xB5F0             PUSH     {R4-R7,LR}
   \   00000002   0xB091             SUB      SP,SP,#+68
     13            /* enable PMC buffer operation also in VLPx modes and bandgap buffer in     */
     14            /* low power mode                                                           */
     15            PMC_Init (PMC_MODULE_LVDRE_ON_LVDINT_OFF_LVWINT_OFF_CONFIG(PMC_LVDL,PMC_LVW1),
     16                      PMC_INTREG_BGEN_ON_BGBE_ON_CONFIG, PRI_LVL0, (PMC_CALLBACK)NULL);
   \   00000004   0x2300             MOVS     R3,#+0
   \   00000006   0x2200             MOVS     R2,#+0
   \   00000008   0x....             ADR.N    R0,?_1
   \   0000000A   0x6801             LDR      R1,[R0, #+0]
   \   0000000C   0x....             ADR.N    R0,?_0
   \   0000000E   0x6800             LDR      R0,[R0, #+0]
   \   00000010   0x.... 0x....      BL       PMC_Init
     17          
     18            /* SMC and SIM modules                                                      */
     19            SMC_Init (SMC_MODULE_VLPS_ON_VLLS_ON_CONFIG);
   \   00000014   0x....             ADR.N    R0,?_2
   \   00000016   0x6800             LDR      R0,[R0, #+0]
   \   00000018   0x9000             STR      R0,[SP, #+0]
   \   0000001A   0x4668             MOV      R0,SP
   \   0000001C   0x7800             LDRB     R0,[R0, #+0]
   \   0000001E   0x....             LDR      R1,??DataTable10  ;; 0x4007e000
   \   00000020   0x7008             STRB     R0,[R1, #+0]
     20            SIM_Init (SIM_MODULE_ALL_PERIPH_OFF_CONFIG);
   \   00000022   0x....             LDR      R0,??DataTable10_1  ;; 0x4003e000
   \   00000024   0x2100             MOVS     R1,#+0
   \   00000026   0x6001             STR      R1,[R0, #+0]
   \   00000028   0x6041             STR      R1,[R0, #+4]
   \   0000002A   0x....             LDR      R0,??DataTable10_2  ;; 0x4003f004
   \   0000002C   0x2101             MOVS     R1,#+1
   \   0000002E   0x6001             STR      R1,[R0, #+0]
   \   00000030   0x....             LDR      R1,??DataTable10_3  ;; 0x78000020
   \   00000032   0x6301             STR      R1,[R0, #+48]
   \   00000034   0x21C0             MOVS     R1,#+192
   \   00000036   0x0289             LSLS     R1,R1,#+10       ;; #+196608
   \   00000038   0x6341             STR      R1,[R0, #+52]
   \   0000003A   0x....             LDR      R1,??DataTable10_4  ;; 0xc0000001
   \   0000003C   0x6381             STR      R1,[R0, #+56]
   \   0000003E   0x2100             MOVS     R1,#+0
   \   00000040   0x63C1             STR      R1,[R0, #+60]
   \   00000042   0x2180             MOVS     R1,#+128
   \   00000044   0x0509             LSLS     R1,R1,#+20       ;; #+134217728
   \   00000046   0x6401             STR      R1,[R0, #+64]
   \   00000048   0x2100             MOVS     R1,#+0
   \   0000004A   0x6481             STR      R1,[R0, #+72]
   \   0000004C   0x2180             MOVS     R1,#+128
   \   0000004E   0x0609             LSLS     R1,R1,#+24       ;; #-2147483648
   \   00000050   0x6681             STR      R1,[R0, #+104]
     21          
     22            SIM_EnableModule (UART1);
   \   00000052   0x....             LDR      R0,??DataTable10_5  ;; 0x4803f034
   \   00000054   0x0D09             LSRS     R1,R1,#+20
   \   00000056   0x6001             STR      R1,[R0, #+0]
     23            SIM_EnableModule (ADC);
   \   00000058   0x6081             STR      R1,[R0, #+8]
     24            SIM_EnableModule (PORTI);
   \   0000005A   0x00C9             LSLS     R1,R1,#+3
   \   0000005C   0x6041             STR      R1,[R0, #+4]
     25          
     26            /* switch to VLPR mode                                                      */
     27            SMC_SetMode(VLPR);
   \   0000005E   0x2040             MOVS     R0,#+64
   \   00000060   0x....             LDR      R1,??DataTable10_6  ;; 0x528fe001
   \   00000062   0x7008             STRB     R0,[R1, #+0]
   \   00000064   0x2004             MOVS     R0,#+4
   \   00000066   0x....             LDR      R1,??DataTable10_7  ;; 0x4007d002
   \                     ??main_0: (+1)
   \   00000068   0x780A             LDRB     R2,[R1, #+0]
   \   0000006A   0x4202             TST      R2,R0
   \   0000006C   0xD1FC             BNE      ??main_0
     28          
     29            /* ADC module                                                               */
     30            ADC_Init  (ADC_MODULE_16B_SWTRG_BGAP_LP_INTERNAL_CLK_CONFIG,
     31                       HWAVG_OFF,
     32                       ADC_CH_SE_POLL_CONFIG(AD3),
     33                       ADC_CH_DISABLE_CONFIG,
     34                       ADC_CH_DISABLE_CONFIG,
     35                       ADC_CH_DISABLE_CONFIG,
     36                       PRI_LVL0,
     37                       (ADC_CALLBACK)NULL);
   \   0000006E   0x221C             MOVS     R2,#+28
   \   00000070   0x2100             MOVS     R1,#+0
   \   00000072   0xA80A             ADD      R0,SP,#+40
   \   00000074   0x.... 0x....      BL       memset
   \   00000078   0xA80A             ADD      R0,SP,#+40
   \   0000007A   0xBF00             Nop      
   \   0000007C   0x....             ADR.N    R1,?_3
   \   0000007E   0x221C             MOVS     R2,#+28
   \   00000080   0x.... 0x....      BL       __aeabi_memcpy4
   \   00000084   0x2000             MOVS     R0,#+0
   \   00000086   0x9009             STR      R0,[SP, #+36]
   \   00000088   0x9008             STR      R0,[SP, #+32]
   \   0000008A   0xBF00             Nop      
   \   0000008C   0x....             ADR.N    R0,?_7
   \   0000008E   0x6800             LDR      R0,[R0, #+0]
   \   00000090   0x9007             STR      R0,[SP, #+28]
   \   00000092   0xBF00             Nop      
   \   00000094   0x....             ADR.N    R0,?_6
   \   00000096   0x6800             LDR      R0,[R0, #+0]
   \   00000098   0x9006             STR      R0,[SP, #+24]
   \   0000009A   0xBF00             Nop      
   \   0000009C   0x....             ADR.N    R0,?_5
   \   0000009E   0x6800             LDR      R0,[R0, #+0]
   \   000000A0   0x9005             STR      R0,[SP, #+20]
   \   000000A2   0xBF00             Nop      
   \   000000A4   0x....             ADR.N    R0,?_4
   \   000000A6   0x6800             LDR      R0,[R0, #+0]
   \   000000A8   0x9004             STR      R0,[SP, #+16]
   \   000000AA   0x20FF             MOVS     R0,#+255
   \   000000AC   0x9003             STR      R0,[SP, #+12]
   \   000000AE   0xA90A             ADD      R1,SP,#+40
   \   000000B0   0xB084             SUB      SP,SP,#+16
   \   000000B2   0x4668             MOV      R0,SP
   \   000000B4   0x221C             MOVS     R2,#+28
   \   000000B6   0x.... 0x....      BL       __aeabi_memcpy4
   \   000000BA   0xBC0F             POP      {R0-R3}
   \   000000BC   0x.... 0x....      BL       ADC_Init
     38          
     39            /* initialize UART and FreeMASTER                                           */
     40            PORT_Init (PORTI, PORT_MODULE_ALT2_MODE, PIN0|PIN1);
   \   000000C0   0x2203             MOVS     R2,#+3
   \   000000C2   0xBF00             Nop      
   \   000000C4   0x....             ADR.N    R0,?_8
   \   000000C6   0xC803             LDM      R0,{R0,R1}
   \   000000C8   0x.... 0x....      BL       PORTI_Init
     41            UART_Init (UART1, UART_MODULE_POLLMODE_CONFIG(38400,2e6));
   \   000000CC   0x....             ADR.N    R0,?_9
   \   000000CE   0xC807             LDM      R0,{R0-R2}
   \   000000D0   0x.... 0x....      BL       UART1_Init
     42          
     43            FMSTR_Init();
   \   000000D4   0x.... 0x....      BL       FMSTR_Init
   \   000000D8   0x....             LDR      R7,??DataTable10_8  ;; 0x5022b000
   \   000000DA   0x....             LDR      R4,??DataTable10_9
   \   000000DC   0x2580             MOVS     R5,#+128
   \   000000DE   0x....             LDR      R6,??DataTable10_10  ;; 0x4002b000
     44          
     45            while (1)
     46            {
     47              FMSTR_Poll ();
   \                     ??main_1: (+1)
   \   000000E0   0x.... 0x....      BL       FMSTR_Poll
     48              if (ADC_Ready(CHA))
   \   000000E4   0x6830             LDR      R0,[R6, #+0]
   \   000000E6   0x4028             ANDS     R0,R0,R5
   \   000000E8   0xD0FA             BEQ      ??main_1
     49              {
     50                ad10_value = ADC_Read(CHA);
   \   000000EA   0x69B0             LDR      R0,[R6, #+24]
   \   000000EC   0x8020             STRH     R0,[R4, #+0]
     51                ADC_Start(CHA,AD3);
   \   000000EE   0x2000             MOVS     R0,#+0
   \   000000F0   0x6038             STR      R0,[R7, #+0]
   \   000000F2   0xE7F5             B        ??main_1
     52              }
     53            }
     54          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10:
   \   00000000   0x4007E000         DC32     0x4007e000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_1:
   \   00000000   0x4003E000         DC32     0x4003e000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_2:
   \   00000000   0x4003F004         DC32     0x4003f004

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_3:
   \   00000000   0x78000020         DC32     0x78000020

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_4:
   \   00000000   0xC0000001         DC32     0xc0000001

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_5:
   \   00000000   0x4803F034         DC32     0x4803f034

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_6:
   \   00000000   0x528FE001         DC32     0x528fe001

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_7:
   \   00000000   0x4007D002         DC32     0x4007d002

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_8:
   \   00000000   0x5022B000         DC32     0x5022b000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_9:
   \   00000000   0x........         DC32     ad10_value

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_10:
   \   00000000   0x4002B000         DC32     0x4002b000

   \                                 In section .text, align 4, keep-with-next
   \                     ?_0:
   \   00000000   0x50 0x40          DC8 80, 64, 0, 0
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ?_1:
   \   00000000   0x11 0x00          DC8 17, 0, 0, 0
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ?_2:
   \   00000000   0x22 0x00          DC8 34, 0, 0, 0
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ?_3:
   \   00000000   0x0000008F         DC32 143, 11, 0, 0, 2, 0, 0
   \              0x0000000B   
   \              0x00000000   
   \              0x00000000   
   \              0x00000002   
   \              0x00000000   
   \              0x00000000   

   \                                 In section .text, align 4, keep-with-next
   \                     ?_4:
   \   00000000   0x00000000         DC32 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_5:
   \   00000000   0x0000001F         DC32 31

   \                                 In section .text, align 4, keep-with-next
   \                     ?_6:
   \   00000000   0x0000001F         DC32 31

   \                                 In section .text, align 4, keep-with-next
   \                     ?_7:
   \   00000000   0x0000001F         DC32 31

   \                                 In section .text, align 4, keep-with-next
   \                     ?_8:
   \   00000000   0x00000200         DC32 512, 0
   \              0x00000000   

   \                                 In section .text, align 4, keep-with-next
   \                     ?_9:
   \   00000000   0x00 0x03          DC8 0, 3, 0, 12, 0, 0, 0, 0, 8, 0, 0, 0
   \              0x00 0x0C    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x08 0x00    
   \              0x00 0x00    

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
     104   main
        88   -> ADC_Init
        88   -> FMSTR_Init
        88   -> FMSTR_Poll
        88   -> PMC_Init
        88   -> PORTI_Init
        88   -> UART1_Init
       104   -> __aeabi_memcpy4
        88   -> __aeabi_memcpy4
        88   -> memset


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable10
       4  ??DataTable10_1
       4  ??DataTable10_10
       4  ??DataTable10_2
       4  ??DataTable10_3
       4  ??DataTable10_4
       4  ??DataTable10_5
       4  ??DataTable10_6
       4  ??DataTable10_7
       4  ??DataTable10_8
       4  ??DataTable10_9
       4  ?_0
       4  ?_1
       4  ?_2
      28  ?_3
       4  ?_4
       4  ?_5
       4  ?_6
       4  ?_7
       8  ?_8
      12  ?_9
       2  ad10_value
     244  main

 
   2 bytes in section .bss
 364 bytes in section .text
 
 364 bytes of CODE memory
   2 bytes of DATA memory

Errors: none
Warnings: none
