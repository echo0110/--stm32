###############################################################################
#
# IAR ANSI C/C++ Compiler V7.40.3.8902/W32 for ARM        13/Jan/2017  10:27:21
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        C:\Freescale\KM128SWDRV_R4_1_6\src\projects\gpio_test\gpio_test.c
#    Command line =  
#        C:\Freescale\KM128SWDRV_R4_1_6\src\projects\gpio_test\gpio_test.c
#        --no_size_constraints -D NDEBUG -lCN
#        C:\Freescale\KM128SWDRV_R4_1_6\build\iar_7_40\projects\gpio_test\Release\List\
#        -o
#        C:\Freescale\KM128SWDRV_R4_1_6\build\iar_7_40\projects\gpio_test\Release\Obj\
#        --no_unroll --debug --endian=little --cpu=Cortex-M0+ --no_mem_idioms
#        -e --fpu=None --dlib_config
#        D:\IAR7.4anzhuang\arm\INC\c\DLib_Config_Normal.h -I
#        C:\Freescale\KM128SWDRV_R4_1_6\build\iar_7_40\projects\gpio_test\..\..\..\..\src\common\
#        -I
#        C:\Freescale\KM128SWDRV_R4_1_6\build\iar_7_40\projects\gpio_test\..\..\..\..\src\drivers\
#        -I
#        C:\Freescale\KM128SWDRV_R4_1_6\build\iar_7_40\projects\gpio_test\..\..\..\..\src\freemaster\
#        -I
#        C:\Freescale\KM128SWDRV_R4_1_6\build\iar_7_40\projects\gpio_test\..\..\..\..\src\projects\gpio_test\
#        -I
#        C:\Freescale\KM128SWDRV_R4_1_6\build\iar_7_40\projects\gpio_test\..\..\..\..\src\toolchain\iar\
#        -Ohs --require_prototypes
#    List file    =  
#        C:\Freescale\KM128SWDRV_R4_1_6\build\iar_7_40\projects\gpio_test\Release\List\gpio_test.lst
#    Object file  =  
#        C:\Freescale\KM128SWDRV_R4_1_6\build\iar_7_40\projects\gpio_test\Release\Obj\gpio_test.o
#
###############################################################################

C:\Freescale\KM128SWDRV_R4_1_6\src\projects\gpio_test\gpio_test.c
      1          /******************************************************************************
      2           * (c) Copyright 2010-2015, Freescale Semiconductor Inc.
      3           * ALL RIGHTS RESERVED.
      4           ******************************************************************************
      5           * gpio_test.c
      6           ******************************************************************************/
      7          #include "drivers.h"
      8          
      9          /* LEDs definition                                                            */
     10          #define LED1    PIN5        /* PTE5 */
     11          #define LED2    PIN1        /* PTD1 */
     12          #define BTN1    PIN0        /* PTD0 */
     13          
     14          
     15          #define s-1    GPIO_Set(GPIOF,PIN1)   
     16          
     17          /* Callback function declaration                                              */
     18          static void port_callback(PORT_CALLBACK_SRC src, uint8 pin);
     19          

   \                                 In section .text, align 4, keep-with-next
     20          void main (void)
     21          {
   \                     main: (+1)
   \   00000000   0xB500             PUSH     {LR}
   \   00000002   0xB081             SUB      SP,SP,#+4
     22            SIM_Init (SIM_MODULE_ALL_PERIPH_ON_CONFIG);
   \   00000004   0x....             LDR      R1,??DataTable4  ;; 0x4003e000
   \   00000006   0x2000             MOVS     R0,#+0
   \   00000008   0x6008             STR      R0,[R1, #+0]
   \   0000000A   0x6048             STR      R0,[R1, #+4]
   \   0000000C   0x....             LDR      R1,??DataTable4_1  ;; 0x4003f004
   \   0000000E   0x2201             MOVS     R2,#+1
   \   00000010   0x600A             STR      R2,[R1, #+0]
   \   00000012   0x....             LDR      R2,??DataTable4_2  ;; 0x786cbdf2
   \   00000014   0x630A             STR      R2,[R1, #+48]
   \   00000016   0x....             LDR      R2,??DataTable4_3  ;; 0x7ab7fc8
   \   00000018   0x634A             STR      R2,[R1, #+52]
   \   0000001A   0x....             LDR      R2,??DataTable4_4  ;; 0xd0116a1f
   \   0000001C   0x638A             STR      R2,[R1, #+56]
   \   0000001E   0x2203             MOVS     R2,#+3
   \   00000020   0x63CA             STR      R2,[R1, #+60]
   \   00000022   0x2280             MOVS     R2,#+128
   \   00000024   0x0512             LSLS     R2,R2,#+20       ;; #+134217728
   \   00000026   0x640A             STR      R2,[R1, #+64]
   \   00000028   0x6488             STR      R0,[R1, #+72]
   \   0000002A   0x6688             STR      R0,[R1, #+104]
     23            PORT_Init (PORTE, PORT_MODULE_LED_MODE, LED1);
   \   0000002C   0x2220             MOVS     R2,#+32
   \   0000002E   0xBF00             Nop      
   \   00000030   0x....             ADR.N    R0,?_0
   \   00000032   0xC803             LDM      R0,{R0,R1}
   \   00000034   0x.... 0x....      BL       PORTE_Init
     24            PORT_Init (PORTD, PORT_MODULE_LED_MODE, LED2);
   \   00000038   0x2202             MOVS     R2,#+2
   \   0000003A   0xBF00             Nop      
   \   0000003C   0x....             ADR.N    R0,?_1
   \   0000003E   0xC803             LDM      R0,{R0,R1}
   \   00000040   0x.... 0x....      BL       PORTD_Init
     25            PORT_Init (PORTD, PORT_MODULE_BUTTON_IRQ_MODE, BTN1);
   \   00000044   0x2201             MOVS     R2,#+1
   \   00000046   0xBF00             Nop      
   \   00000048   0x....             ADR.N    R0,?_2
   \   0000004A   0xC803             LDM      R0,{R0,R1}
   \   0000004C   0x.... 0x....      BL       PORTD_Init
     26            GPIO_Init (GPIOE, GPIO_OUT_LOGIC0_MODE, LED1);
   \   00000050   0x....             LDR      R0,??DataTable4_5  ;; 0x400ff040
   \   00000052   0x7801             LDRB     R1,[R0, #+0]
   \   00000054   0x22DF             MOVS     R2,#+223
   \   00000056   0x400A             ANDS     R2,R2,R1
   \   00000058   0x7002             STRB     R2,[R0, #+0]
   \   0000005A   0x7D01             LDRB     R1,[R0, #+20]
   \   0000005C   0x2220             MOVS     R2,#+32
   \   0000005E   0x430A             ORRS     R2,R2,R1
   \   00000060   0x7502             STRB     R2,[R0, #+20]
     27            GPIO_Init (GPIOD, GPIO_OUT_LOGIC1_MODE, LED2);
   \   00000062   0x383D             SUBS     R0,R0,#+61
   \   00000064   0x2102             MOVS     R1,#+2
   \   00000066   0x7802             LDRB     R2,[R0, #+0]
   \   00000068   0x430A             ORRS     R2,R2,R1
   \   0000006A   0x7002             STRB     R2,[R0, #+0]
   \   0000006C   0x7D02             LDRB     R2,[R0, #+20]
   \   0000006E   0x4311             ORRS     R1,R1,R2
   \   00000070   0x7501             STRB     R1,[R0, #+20]
     28            GPIO_Init (GPIOD, GPIO_INP_MODE, BTN1);
   \   00000072   0x21FE             MOVS     R1,#+254
   \   00000074   0x7802             LDRB     R2,[R0, #+0]
   \   00000076   0x400A             ANDS     R2,R2,R1
   \   00000078   0x7002             STRB     R2,[R0, #+0]
   \   0000007A   0x7D02             LDRB     R2,[R0, #+20]
   \   0000007C   0x4011             ANDS     R1,R1,R2
   \   0000007E   0x7501             STRB     R1,[R0, #+20]
     29          
     30            PORT_InstallCallback (PRI_LVL3,port_callback);
   \   00000080   0x....             LDR      R1,??DataTable4_6
   \   00000082   0x2003             MOVS     R0,#+3
   \   00000084   0x.... 0x....      BL       PORT_InstallCallback
     31            EnableInterrupts();
   \   00000088   0xB662             CPSIE i
     32          
     33            while(1);
   \                     ??main_0: (+1)
   \   0000008A   0xE7FE             B        ??main_0
     34          }
     35          
     36          /* Callback function definition                                               */

   \                                 In section .text, align 2, keep-with-next
     37          static void port_callback(PORT_CALLBACK_SRC src, uint8 pin)
     38          {
     39            if (src == PORTD_CALLBACK)
   \                     port_callback: (+1)
   \   00000000   0x2804             CMP      R0,#+4
   \   00000002   0xD10B             BNE      ??port_callback_0
     40            {
     41              if (pin == BTN1)
   \   00000004   0x2901             CMP      R1,#+1
   \   00000006   0xD109             BNE      ??port_callback_0
     42              {
     43                GPIO_Tgl (GPIOE, LED1);  /* standard access via peripheral bridge       */
   \   00000008   0x....             LDR      R0,??DataTable4_5  ;; 0x400ff040
   \   0000000A   0x7801             LDRB     R1,[R0, #+0]
   \   0000000C   0x2220             MOVS     R2,#+32
   \   0000000E   0x404A             EORS     R2,R2,R1
   \   00000010   0x7002             STRB     R2,[R0, #+0]
     44                GPIO_Tgl (FGPIOD, LED2); /* single cycle direct access via IOPORT       */
   \   00000012   0x....             LDR      R0,??DataTable4_7  ;; 0xf8000003
   \   00000014   0x7801             LDRB     R1,[R0, #+0]
   \   00000016   0x2202             MOVS     R2,#+2
   \   00000018   0x404A             EORS     R2,R2,R1
   \   0000001A   0x7002             STRB     R2,[R0, #+0]
     45              }
     46            }
     47          }
   \                     ??port_callback_0: (+1)
   \   0000001C   0x4770             BX       LR               ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4:
   \   00000000   0x4003E000         DC32     0x4003e000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_1:
   \   00000000   0x4003F004         DC32     0x4003f004

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_2:
   \   00000000   0x786CBDF2         DC32     0x786cbdf2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_3:
   \   00000000   0x07AB7FC8         DC32     0x7ab7fc8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_4:
   \   00000000   0xD0116A1F         DC32     0xd0116a1f

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_5:
   \   00000000   0x400FF040         DC32     0x400ff040

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_6:
   \   00000000   0x........         DC32     port_callback

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_7:
   \   00000000   0xF8000003         DC32     0xf8000003

   \                                 In section .text, align 4, keep-with-next
   \                     ?_0:
   \   00000000   0x00000104         DC32 260, 0
   \              0x00000000   

   \                                 In section .text, align 4, keep-with-next
   \                     ?_1:
   \   00000000   0x00000104         DC32 260, 0
   \              0x00000000   

   \                                 In section .text, align 4, keep-with-next
   \                     ?_2:
   \   00000000   0x000A0103         DC32 655619, 4294967295
   \              0xFFFFFFFF   

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   main
         8   -> PORTD_Init
         8   -> PORTE_Init
         8   -> PORT_InstallCallback
       0   port_callback


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable4
       4  ??DataTable4_1
       4  ??DataTable4_2
       4  ??DataTable4_3
       4  ??DataTable4_4
       4  ??DataTable4_5
       4  ??DataTable4_6
       4  ??DataTable4_7
       8  ?_0
       8  ?_1
       8  ?_2
     140  main
      30  port_callback

 
 226 bytes in section .text
 
 226 bytes of CODE memory

Errors: none
Warnings: 1
