###############################################################################
#
# IAR ANSI C/C++ Compiler V7.40.3.8902/W32 for ARM        26/Dec/2016  20:06:58
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        C:\Freescale\KM128SWDRV_R4_1_6\src\projects\oscafe_test\oscafe_test.c
#    Command line =  
#        C:\Freescale\KM128SWDRV_R4_1_6\src\projects\oscafe_test\oscafe_test.c
#        --no_size_constraints -D NDEBUG -lCN
#        C:\Freescale\KM128SWDRV_R4_1_6\build\iar_7_40\projects\oscafe_test\Release\List\
#        -o
#        C:\Freescale\KM128SWDRV_R4_1_6\build\iar_7_40\projects\oscafe_test\Release\Obj\
#        --no_unroll --debug --endian=little --cpu=Cortex-M0+ --no_mem_idioms
#        -e --fpu=None --dlib_config
#        D:\IAR7.4anzhuang\arm\INC\c\DLib_Config_Normal.h -I
#        C:\Freescale\KM128SWDRV_R4_1_6\build\iar_7_40\projects\oscafe_test\..\..\..\..\src\common\
#        -I
#        C:\Freescale\KM128SWDRV_R4_1_6\build\iar_7_40\projects\oscafe_test\..\..\..\..\src\drivers\
#        -I
#        C:\Freescale\KM128SWDRV_R4_1_6\build\iar_7_40\projects\oscafe_test\..\..\..\..\src\freemaster\
#        -I
#        C:\Freescale\KM128SWDRV_R4_1_6\build\iar_7_40\projects\oscafe_test\..\..\..\..\src\projects\oscafe_test\
#        -I
#        C:\Freescale\KM128SWDRV_R4_1_6\build\iar_7_40\projects\oscafe_test\..\..\..\..\src\toolchain\iar\
#        -Ohs --require_prototypes
#    List file    =  
#        C:\Freescale\KM128SWDRV_R4_1_6\build\iar_7_40\projects\oscafe_test\Release\List\oscafe_test.lst
#    Object file  =  
#        C:\Freescale\KM128SWDRV_R4_1_6\build\iar_7_40\projects\oscafe_test\Release\Obj\oscafe_test.o
#
###############################################################################

C:\Freescale\KM128SWDRV_R4_1_6\src\projects\oscafe_test\oscafe_test.c
      1          /******************************************************************************
      2           * (c) Copyright 2010-2015, Freescale Semiconductor Inc.
      3           * ALL RIGHTS RESERVED.
      4           ******************************************************************************
      5           * oscafe_test.c
      6           ******************************************************************************/
      7          #include "drivers.h"
      8          
      9          /* global data definitions                                                    */

   \                                 In section .bss, align 4
     10          volatile int32 result;
   \                     result:
   \   00000000                      DS8 4
     11          

   \                                 In section .text, align 4, keep-with-next
     12          void main (void)
     13          {
   \                     main: (+1)
   \   00000000   0xB530             PUSH     {R4,R5,LR}
   \   00000002   0xB081             SUB      SP,SP,#+4
     14            /* enable clocks to all peripherals - clock mode 2:1:1 (core:bus:flash)     */
     15            SIM_Init (SIM_MODULE_ALL_PERIPH_ON_CONFIG);
   \   00000004   0x....             LDR      R1,??DataTable7  ;; 0x4003e000
   \   00000006   0x2000             MOVS     R0,#+0
   \   00000008   0x6008             STR      R0,[R1, #+0]
   \   0000000A   0x6048             STR      R0,[R1, #+4]
   \   0000000C   0x....             LDR      R1,??DataTable7_1  ;; 0x4003f004
   \   0000000E   0x2201             MOVS     R2,#+1
   \   00000010   0x600A             STR      R2,[R1, #+0]
   \   00000012   0x....             LDR      R2,??DataTable7_2  ;; 0x786cbdf2
   \   00000014   0x630A             STR      R2,[R1, #+48]
   \   00000016   0x....             LDR      R2,??DataTable7_3  ;; 0x7ab7fc8
   \   00000018   0x634A             STR      R2,[R1, #+52]
   \   0000001A   0x....             LDR      R2,??DataTable7_4  ;; 0xd0116a1f
   \   0000001C   0x638A             STR      R2,[R1, #+56]
   \   0000001E   0x2503             MOVS     R5,#+3
   \   00000020   0x63CD             STR      R5,[R1, #+60]
   \   00000022   0x2280             MOVS     R2,#+128
   \   00000024   0x0512             LSLS     R2,R2,#+20       ;; #+134217728
   \   00000026   0x640A             STR      R2,[R1, #+64]
   \   00000028   0x6488             STR      R0,[R1, #+72]
   \   0000002A   0x6688             STR      R0,[R1, #+104]
     16          
     17            /* route bus clock to PTF7                                                  */
     18            SIM_SelClkout (CLKOUT_SRC2);
   \   0000002C   0x2440             MOVS     R4,#+64
   \   0000002E   0x....             LDR      R0,??DataTable7_5  ;; 0x5293f004
   \   00000030   0x6004             STR      R4,[R0, #+0]
     19            PORT_Init (PORTF,PORT_MODULE_ALT3_MODE,PIN7);
   \   00000032   0x2280             MOVS     R2,#+128
   \   00000034   0x....             ADR.N    R0,?_0
   \   00000036   0xC803             LDM      R0,{R0,R1}
   \   00000038   0x.... 0x....      BL       PORTF_Init
     20          
     21            /* configures AFE_CLK pad to output mode and routes it to PTB7              */
     22            SIM_SelAfeClkPadDir (TRUE);
   \   0000003C   0x....             LDR      R0,??DataTable7_6  ;; 0x5303f06c
   \   0000003E   0x6004             STR      R4,[R0, #+0]
     23            PORT_Init (PORTB,PORT_MODULE_ALT2_MODE,PIN7);
   \   00000040   0x2280             MOVS     R2,#+128
   \   00000042   0xBF00             Nop      
   \   00000044   0x....             ADR.N    R0,?_1
   \   00000046   0xC803             LDM      R0,{R0,R1}
   \   00000048   0x.... 0x....      BL       PORTB_Init
     24          
     25            /* system oscillator and FLL settings                                       */
     26            OSC_Init (OSC_MODULE_OSCERCLK_ON_STOPMODE_ON_CONFIG(OSC_SC0P));
   \   0000004C   0x....             ADR.N    R0,?_2
   \   0000004E   0x6800             LDR      R0,[R0, #+0]
   \   00000050   0x9000             STR      R0,[SP, #+0]
   \   00000052   0x4668             MOV      R0,SP
   \   00000054   0x7800             LDRB     R0,[R0, #+0]
   \   00000056   0x....             LDR      R1,??DataTable7_7  ;; 0x40066000
   \   00000058   0x7008             STRB     R0,[R1, #+0]
     27            FLL_Init (FLL_MODULE_FEE_20_25MHZ_DIV256_OSC_CONFIG);
   \   0000005A   0xBF00             Nop      
   \   0000005C   0x....             ADR.N    R0,?_3
   \   0000005E   0xC803             LDM      R0,{R0,R1}
   \   00000060   0x.... 0x....      BL       FLL_Init
     28          
     29            /* VREF module must be initialized after SIM module                         */
     30            VREF_Init (VREF_MODULE_CHOP_EN_ICOMP_EN_REG_EN_VREFL_EN_LPWR_CONFIG,
     31                       VREF_SWITCH_S1_L_S2_L_S3_L_BUFF_DI);
   \   00000064   0x....             ADR.N    R0,?_5
   \   00000066   0xC803             LDM      R0,{R0,R1}
   \   00000068   0x000A             MOVS     R2,R1
   \   0000006A   0x0001             MOVS     R1,R0
   \   0000006C   0x....             ADR.N    R0,?_4
   \   0000006E   0x6800             LDR      R0,[R0, #+0]
   \   00000070   0x.... 0x....      BL       VREF_Init
     32            VREFL_Trim( 3);                                 /* VREFL trimmed to 0.400 V */
   \   00000074   0x....             LDR      R0,??DataTable7_8  ;; 0x4006f005
   \   00000076   0x7801             LDRB     R1,[R0, #+0]
   \   00000078   0x2218             MOVS     R2,#+24
   \   0000007A   0x400A             ANDS     R2,R2,R1
   \   0000007C   0x4315             ORRS     R5,R5,R2
   \   0000007E   0x7005             STRB     R5,[R0, #+0]
     33          
     34            /* afe clocking directly from system oscillator                             */
     35            SIM_SelAfePllClk (SIM_OSC_CLK);
   \   00000080   0x2020             MOVS     R0,#+32
   \   00000082   0x....             LDR      R1,??DataTable7_9  ;; 0x520bf06c
   \   00000084   0x6008             STR      R0,[R1, #+0]
     36            AFE_ChInit (CH1, AFE_CH_SWTRG_CCM_PGAOFF_CONFIG(DEC_OSR64), 0, PRI_LVL0, NULL);
   \   00000086   0x2300             MOVS     R3,#+0
   \   00000088   0x2200             MOVS     R2,#+0
   \   0000008A   0x2100             MOVS     R1,#+0
   \   0000008C   0x....             ADR.N    R0,?_6
   \   0000008E   0x6800             LDR      R0,[R0, #+0]
   \   00000090   0x.... 0x....      BL       AFE_CH1_Init
     37            AFE_Init   (AFE_MODULE_RJFORMAT_CONFIG(AFE_PLL_CLK, AFE_DIV2, 8000000));
   \   00000094   0x....             LDR      R0,??DataTable7_10  ;; 0x40030018
   \   00000096   0x2181             MOVS     R1,#+129
   \   00000098   0x0549             LSLS     R1,R1,#+21       ;; #+270532608
   \   0000009A   0x6041             STR      R1,[R0, #+4]
   \   0000009C   0x....             LDR      R1,??DataTable7_11  ;; 0x8064a000
   \   0000009E   0x6001             STR      R1,[R0, #+0]
     38          
     39            /* trigger AFE operation by SW                                              */
     40            AFE_SwTrigger (CH1);
   \   000000A0   0x05E1             LSLS     R1,R4,#+23
   \   000000A2   0x....             LDR      R2,??DataTable7_12  ;; 0x5d9b0018
   \   000000A4   0x6011             STR      R1,[R2, #+0]
   \   000000A6   0x....             LDR      R1,??DataTable7_13
   \   000000A8   0x0622             LSLS     R2,R4,#+24
     41          
     42            /* main loop                                                                */
     43            while (1)
     44            {
     45              if (AFE_ChReady(CH1))
   \                     ??main_0: (+1)
   \   000000AA   0x6C43             LDR      R3,[R0, #+68]
   \   000000AC   0x4013             ANDS     R3,R3,R2
   \   000000AE   0xD0FC             BEQ      ??main_0
     46              {
     47                AFE_Read (CH1, &result);
   \   000000B0   0x6B03             LDR      R3,[R0, #+48]
   \   000000B2   0x600B             STR      R3,[R1, #+0]
   \   000000B4   0xE7F9             B        ??main_0
     48              }
     49            }
     50          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7:
   \   00000000   0x4003E000         DC32     0x4003e000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_1:
   \   00000000   0x4003F004         DC32     0x4003f004

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_2:
   \   00000000   0x786CBDF2         DC32     0x786cbdf2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_3:
   \   00000000   0x07AB7FC8         DC32     0x7ab7fc8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_4:
   \   00000000   0xD0116A1F         DC32     0xd0116a1f

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_5:
   \   00000000   0x5293F004         DC32     0x5293f004

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_6:
   \   00000000   0x5303F06C         DC32     0x5303f06c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_7:
   \   00000000   0x40066000         DC32     0x40066000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_8:
   \   00000000   0x4006F005         DC32     0x4006f005

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_9:
   \   00000000   0x520BF06C         DC32     0x520bf06c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_10:
   \   00000000   0x40030018         DC32     0x40030018

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_11:
   \   00000000   0x8064A000         DC32     0x8064a000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_12:
   \   00000000   0x5D9B0018         DC32     0x5d9b0018

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_13:
   \   00000000   0x........         DC32     result

   \                                 In section .text, align 4, keep-with-next
   \                     ?_0:
   \   00000000   0x00000300         DC32 768, 0
   \              0x00000000   

   \                                 In section .text, align 4, keep-with-next
   \                     ?_1:
   \   00000000   0x00000200         DC32 512, 0
   \              0x00000000   

   \                                 In section .text, align 4, keep-with-next
   \                     ?_2:
   \   00000000   0xA0 0x00          DC8 160, 0, 0, 0
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ?_3:
   \   00000000   0x18 0xAD          DC8 24, 173, 0, 8, 2, 0, 128, 0
   \              0x00 0x08    
   \              0x02 0x00    
   \              0x80 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ?_4:
   \   00000000   0x40 0xE2          DC8 64, 226, 8, 0
   \              0x08 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ?_5:
   \   00000000   0x80000000         DC32 2147483648
   \   00000004   0x00 0x00          DC8 0, 0, 0, 0
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ?_6:
   \   00000000   0x00087000         DC32 552960
     51          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      16   main
        16   -> AFE_CH1_Init
        16   -> FLL_Init
        16   -> PORTB_Init
        16   -> PORTF_Init
        16   -> VREF_Init


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable7
       4  ??DataTable7_1
       4  ??DataTable7_10
       4  ??DataTable7_11
       4  ??DataTable7_12
       4  ??DataTable7_13
       4  ??DataTable7_2
       4  ??DataTable7_3
       4  ??DataTable7_4
       4  ??DataTable7_5
       4  ??DataTable7_6
       4  ??DataTable7_7
       4  ??DataTable7_8
       4  ??DataTable7_9
       8  ?_0
       8  ?_1
       4  ?_2
       8  ?_3
       4  ?_4
       8  ?_5
       4  ?_6
     182  main
       4  result

 
   4 bytes in section .bss
 282 bytes in section .text
 
 282 bytes of CODE memory
   4 bytes of DATA memory

Errors: none
Warnings: none
