###############################################################################
#
# IAR ANSI C/C++ Compiler V7.40.3.8902/W32 for ARM        08/Feb/2017  13:31:57
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  C:\Freescale\KM128SWDRV_R4_1_6\src\drivers\afe\afe.c
#    Command line =  
#        C:\Freescale\KM128SWDRV_R4_1_6\src\drivers\afe\afe.c -D NDEBUG -lCN
#        C:\Freescale\KM128SWDRV_R4_1_6\build\iar_7_40\projects\uart_test\Release\List\
#        -o
#        C:\Freescale\KM128SWDRV_R4_1_6\build\iar_7_40\projects\uart_test\Release\Obj\
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M0+ --no_mem_idioms -e --fpu=None --dlib_config
#        D:\IAR7.4anzhuang\arm\INC\c\DLib_Config_Normal.h -I
#        C:\Freescale\KM128SWDRV_R4_1_6\build\iar_7_40\projects\uart_test\..\..\..\..\src\common\
#        -I
#        C:\Freescale\KM128SWDRV_R4_1_6\build\iar_7_40\projects\uart_test\..\..\..\..\src\drivers\
#        -I
#        C:\Freescale\KM128SWDRV_R4_1_6\build\iar_7_40\projects\uart_test\..\..\..\..\src\freemaster\
#        -I
#        C:\Freescale\KM128SWDRV_R4_1_6\build\iar_7_40\projects\uart_test\..\..\..\..\src\projects\uart_test\
#        -I
#        C:\Freescale\KM128SWDRV_R4_1_6\build\iar_7_40\projects\uart_test\..\..\..\..\src\toolchain\iar\
#        -On --require_prototypes
#    List file    =  
#        C:\Freescale\KM128SWDRV_R4_1_6\build\iar_7_40\projects\uart_test\Release\List\afe.lst
#    Object file  =  
#        C:\Freescale\KM128SWDRV_R4_1_6\build\iar_7_40\projects\uart_test\Release\Obj\afe.o
#
###############################################################################

C:\Freescale\KM128SWDRV_R4_1_6\src\drivers\afe\afe.c
      1          /******************************************************************************
      2           * (c) Copyright 2010-2015, Freescale Semiconductor Inc.
      3           * ALL RIGHTS RESERVED.
      4           ***************************************************************************//*!
      5           * @file      afe.c
      6           * @version   1.0.3.0
      7           * @date      Apr-20-2015
      8           * @brief     Analog Front End (AFE) driver source code.
      9           ******************************************************************************/
     10          #include "common.h"
     11          #include "afe.h"
     12          
     13          #if !defined(MCU_MKM34ZA5)
     14            #error "The afe.c module is specific to the MKMxxZxxACxx5 microcontrollers."
     15          #endif
     16          /******************************************************************************
     17           * data type definitions                                                      *
     18           ******************************************************************************/

   \                                 In section .bss, align 4
     19          static AFE_CH_CALLBACK pCallbackAFE_CH0;
   \                     pCallbackAFE_CH0:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     20          static AFE_CH_CALLBACK pCallbackAFE_CH1;
   \                     pCallbackAFE_CH1:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     21          static AFE_CH_CALLBACK pCallbackAFE_CH2;
   \                     pCallbackAFE_CH2:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     22          static AFE_CH_CALLBACK pCallbackAFE_CH3;
   \                     pCallbackAFE_CH3:
   \   00000000                      DS8 4
     23          
     24          /******************************************************************************
     25           * public function definitions                                                *
     26           ******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
     27          void AFE_CH0_Init(tAFE_CH ch, int16 dly, uint8 ip, AFE_CH_CALLBACK pCallback)
     28          {
   \                     AFE_CH0_Init: (+1)
   \   00000000   0xB530             PUSH     {R4,R5,LR}
     29            if (pCallback)
   \   00000002   0x001C             MOVS     R4,R3
   \   00000004   0x2C00             CMP      R4,#+0
   \   00000006   0xD01D             BEQ      ??AFE_CH0_Init_0
     30            {
     31              pCallbackAFE_CH0 = pCallback;
   \   00000008   0x....             LDR      R4,??DataTable7
   \   0000000A   0x6023             STR      R3,[R4, #+0]
     32              NVIC_SetIsr(INT_AFE0,ip);
   \   0000000C   0x....             LDR      R4,??DataTable7_1  ;; 0xe000e280
   \   0000000E   0x6824             LDR      R4,[R4, #+0]
   \   00000010   0x2580             MOVS     R5,#+128
   \   00000012   0x03AD             LSLS     R5,R5,#+14       ;; #+2097152
   \   00000014   0x4325             ORRS     R5,R5,R4
   \   00000016   0x....             LDR      R4,??DataTable7_1  ;; 0xe000e280
   \   00000018   0x6025             STR      R5,[R4, #+0]
   \   0000001A   0x....             LDR      R4,??DataTable7_2  ;; 0xe000e100
   \   0000001C   0x6824             LDR      R4,[R4, #+0]
   \   0000001E   0x2580             MOVS     R5,#+128
   \   00000020   0x03AD             LSLS     R5,R5,#+14       ;; #+2097152
   \   00000022   0x4325             ORRS     R5,R5,R4
   \   00000024   0x....             LDR      R4,??DataTable7_2  ;; 0xe000e100
   \   00000026   0x6025             STR      R5,[R4, #+0]
   \   00000028   0x....             LDR      R4,??DataTable7_3  ;; 0xe000e414
   \   0000002A   0x6824             LDR      R4,[R4, #+0]
   \   0000002C   0xB2D2             UXTB     R2,R2
   \   0000002E   0x0395             LSLS     R5,R2,#+14
   \   00000030   0x4325             ORRS     R5,R5,R4
   \   00000032   0x....             LDR      R4,??DataTable7_3  ;; 0xe000e414
   \   00000034   0x6025             STR      R5,[R4, #+0]
     33              AFE_DI |= AFE_DI_INTEN0_MASK;
   \   00000036   0x....             LDR      R4,??DataTable7_4  ;; 0x40030020
   \   00000038   0x6824             LDR      R4,[R4, #+0]
   \   0000003A   0x2580             MOVS     R5,#+128
   \   0000003C   0x04ED             LSLS     R5,R5,#+19       ;; #+67108864
   \   0000003E   0x4325             ORRS     R5,R5,R4
   \   00000040   0x....             LDR      R4,??DataTable7_4  ;; 0x40030020
   \   00000042   0x6025             STR      R5,[R4, #+0]
     34            }
     35            AFE_CH0_DR  = ((dly>0)?dly:0);        /* update only if value is positive   */
   \                     ??AFE_CH0_Init_0: (+1)
   \   00000044   0xB209             SXTH     R1,R1
   \   00000046   0x2901             CMP      R1,#+1
   \   00000048   0xDB02             BLT      ??AFE_CH0_Init_1
   \   0000004A   0xB209             SXTH     R1,R1
   \   0000004C   0x000C             MOVS     R4,R1
   \   0000004E   0xE000             B        ??AFE_CH0_Init_2
   \                     ??AFE_CH0_Init_1: (+1)
   \   00000050   0x2400             MOVS     R4,#+0
   \                     ??AFE_CH0_Init_2: (+1)
   \   00000052   0x....             LDR      R5,??DataTable7_5  ;; 0x4003002c
   \   00000054   0x602C             STR      R4,[R5, #+0]
     36            AFE_CH0_CFR = ch.CFR;
   \   00000056   0x....             LDR      R4,??DataTable7_6  ;; 0x40030000
   \   00000058   0x6020             STR      R0,[R4, #+0]
     37          }
   \   0000005A   0xBD30             POP      {R4,R5,PC}       ;; return
     38          

   \                                 In section .text, align 2, keep-with-next
     39          void AFE_CH1_Init(tAFE_CH ch, int16 dly, uint8 ip, AFE_CH_CALLBACK pCallback)
     40          {
   \                     AFE_CH1_Init: (+1)
   \   00000000   0xB530             PUSH     {R4,R5,LR}
     41            if (pCallback)
   \   00000002   0x001C             MOVS     R4,R3
   \   00000004   0x2C00             CMP      R4,#+0
   \   00000006   0xD01D             BEQ      ??AFE_CH1_Init_0
     42            {
     43              pCallbackAFE_CH1 = pCallback;
   \   00000008   0x....             LDR      R4,??DataTable7_7
   \   0000000A   0x6023             STR      R3,[R4, #+0]
     44              NVIC_SetIsr(INT_AFE1,ip);
   \   0000000C   0x....             LDR      R4,??DataTable7_1  ;; 0xe000e280
   \   0000000E   0x6824             LDR      R4,[R4, #+0]
   \   00000010   0x2580             MOVS     R5,#+128
   \   00000012   0x03ED             LSLS     R5,R5,#+15       ;; #+4194304
   \   00000014   0x4325             ORRS     R5,R5,R4
   \   00000016   0x....             LDR      R4,??DataTable7_1  ;; 0xe000e280
   \   00000018   0x6025             STR      R5,[R4, #+0]
   \   0000001A   0x....             LDR      R4,??DataTable7_2  ;; 0xe000e100
   \   0000001C   0x6824             LDR      R4,[R4, #+0]
   \   0000001E   0x2580             MOVS     R5,#+128
   \   00000020   0x03ED             LSLS     R5,R5,#+15       ;; #+4194304
   \   00000022   0x4325             ORRS     R5,R5,R4
   \   00000024   0x....             LDR      R4,??DataTable7_2  ;; 0xe000e100
   \   00000026   0x6025             STR      R5,[R4, #+0]
   \   00000028   0x....             LDR      R4,??DataTable7_3  ;; 0xe000e414
   \   0000002A   0x6824             LDR      R4,[R4, #+0]
   \   0000002C   0xB2D2             UXTB     R2,R2
   \   0000002E   0x0595             LSLS     R5,R2,#+22
   \   00000030   0x4325             ORRS     R5,R5,R4
   \   00000032   0x....             LDR      R4,??DataTable7_3  ;; 0xe000e414
   \   00000034   0x6025             STR      R5,[R4, #+0]
     45              AFE_DI |= AFE_DI_INTEN1_MASK;
   \   00000036   0x....             LDR      R4,??DataTable7_4  ;; 0x40030020
   \   00000038   0x6824             LDR      R4,[R4, #+0]
   \   0000003A   0x2580             MOVS     R5,#+128
   \   0000003C   0x04AD             LSLS     R5,R5,#+18       ;; #+33554432
   \   0000003E   0x4325             ORRS     R5,R5,R4
   \   00000040   0x....             LDR      R4,??DataTable7_4  ;; 0x40030020
   \   00000042   0x6025             STR      R5,[R4, #+0]
     46            }
     47            AFE_CH1_DR  = ((dly>0)?dly:0);        /* update only if value is positive   */
   \                     ??AFE_CH1_Init_0: (+1)
   \   00000044   0xB209             SXTH     R1,R1
   \   00000046   0x2901             CMP      R1,#+1
   \   00000048   0xDB02             BLT      ??AFE_CH1_Init_1
   \   0000004A   0xB209             SXTH     R1,R1
   \   0000004C   0x000C             MOVS     R4,R1
   \   0000004E   0xE000             B        ??AFE_CH1_Init_2
   \                     ??AFE_CH1_Init_1: (+1)
   \   00000050   0x2400             MOVS     R4,#+0
   \                     ??AFE_CH1_Init_2: (+1)
   \   00000052   0x....             LDR      R5,??DataTable7_8  ;; 0x40030030
   \   00000054   0x602C             STR      R4,[R5, #+0]
     48            AFE_CH1_CFR = ch.CFR;
   \   00000056   0x....             LDR      R4,??DataTable7_9  ;; 0x40030004
   \   00000058   0x6020             STR      R0,[R4, #+0]
     49          }
   \   0000005A   0xBD30             POP      {R4,R5,PC}       ;; return
     50          

   \                                 In section .text, align 2, keep-with-next
     51          void AFE_CH2_Init(tAFE_CH ch, int16 dly, uint8 ip, AFE_CH_CALLBACK pCallback)
     52          {
   \                     AFE_CH2_Init: (+1)
   \   00000000   0xB530             PUSH     {R4,R5,LR}
     53            if (pCallback)
   \   00000002   0x001C             MOVS     R4,R3
   \   00000004   0x2C00             CMP      R4,#+0
   \   00000006   0xD01D             BEQ      ??AFE_CH2_Init_0
     54            {
     55              pCallbackAFE_CH2 = pCallback;
   \   00000008   0x....             LDR      R4,??DataTable7_10
   \   0000000A   0x6023             STR      R3,[R4, #+0]
     56              NVIC_SetIsr(INT_AFE2,ip);
   \   0000000C   0x....             LDR      R4,??DataTable7_1  ;; 0xe000e280
   \   0000000E   0x6824             LDR      R4,[R4, #+0]
   \   00000010   0x2580             MOVS     R5,#+128
   \   00000012   0x042D             LSLS     R5,R5,#+16       ;; #+8388608
   \   00000014   0x4325             ORRS     R5,R5,R4
   \   00000016   0x....             LDR      R4,??DataTable7_1  ;; 0xe000e280
   \   00000018   0x6025             STR      R5,[R4, #+0]
   \   0000001A   0x....             LDR      R4,??DataTable7_2  ;; 0xe000e100
   \   0000001C   0x6824             LDR      R4,[R4, #+0]
   \   0000001E   0x2580             MOVS     R5,#+128
   \   00000020   0x042D             LSLS     R5,R5,#+16       ;; #+8388608
   \   00000022   0x4325             ORRS     R5,R5,R4
   \   00000024   0x....             LDR      R4,??DataTable7_2  ;; 0xe000e100
   \   00000026   0x6025             STR      R5,[R4, #+0]
   \   00000028   0x....             LDR      R4,??DataTable7_3  ;; 0xe000e414
   \   0000002A   0x6824             LDR      R4,[R4, #+0]
   \   0000002C   0xB2D2             UXTB     R2,R2
   \   0000002E   0x0795             LSLS     R5,R2,#+30
   \   00000030   0x4325             ORRS     R5,R5,R4
   \   00000032   0x....             LDR      R4,??DataTable7_3  ;; 0xe000e414
   \   00000034   0x6025             STR      R5,[R4, #+0]
     57              AFE_DI |= AFE_DI_INTEN2_MASK;
   \   00000036   0x....             LDR      R4,??DataTable7_4  ;; 0x40030020
   \   00000038   0x6824             LDR      R4,[R4, #+0]
   \   0000003A   0x2580             MOVS     R5,#+128
   \   0000003C   0x046D             LSLS     R5,R5,#+17       ;; #+16777216
   \   0000003E   0x4325             ORRS     R5,R5,R4
   \   00000040   0x....             LDR      R4,??DataTable7_4  ;; 0x40030020
   \   00000042   0x6025             STR      R5,[R4, #+0]
     58            }
     59            AFE_CH2_DR  = ((dly>0)?dly:0);        /* update only if value is positive   */
   \                     ??AFE_CH2_Init_0: (+1)
   \   00000044   0xB209             SXTH     R1,R1
   \   00000046   0x2901             CMP      R1,#+1
   \   00000048   0xDB02             BLT      ??AFE_CH2_Init_1
   \   0000004A   0xB209             SXTH     R1,R1
   \   0000004C   0x000C             MOVS     R4,R1
   \   0000004E   0xE000             B        ??AFE_CH2_Init_2
   \                     ??AFE_CH2_Init_1: (+1)
   \   00000050   0x2400             MOVS     R4,#+0
   \                     ??AFE_CH2_Init_2: (+1)
   \   00000052   0x....             LDR      R5,??DataTable7_11  ;; 0x40030034
   \   00000054   0x602C             STR      R4,[R5, #+0]
     60            AFE_CH2_CFR = ch.CFR;
   \   00000056   0x....             LDR      R4,??DataTable7_12  ;; 0x40030008
   \   00000058   0x6020             STR      R0,[R4, #+0]
     61          }
   \   0000005A   0xBD30             POP      {R4,R5,PC}       ;; return
     62          

   \                                 In section .text, align 2, keep-with-next
     63          void AFE_CH3_Init(tAFE_CH ch, int16 dly, uint8 ip, AFE_CH_CALLBACK pCallback)
     64          {
   \                     AFE_CH3_Init: (+1)
   \   00000000   0xB530             PUSH     {R4,R5,LR}
     65            if (pCallback)
   \   00000002   0x001C             MOVS     R4,R3
   \   00000004   0x2C00             CMP      R4,#+0
   \   00000006   0xD01D             BEQ      ??AFE_CH3_Init_0
     66            {
     67              pCallbackAFE_CH3 = pCallback;
   \   00000008   0x....             LDR      R4,??DataTable7_13
   \   0000000A   0x6023             STR      R3,[R4, #+0]
     68              NVIC_SetIsr(INT_AFE3,ip);
   \   0000000C   0x....             LDR      R4,??DataTable7_1  ;; 0xe000e280
   \   0000000E   0x6824             LDR      R4,[R4, #+0]
   \   00000010   0x2580             MOVS     R5,#+128
   \   00000012   0x046D             LSLS     R5,R5,#+17       ;; #+16777216
   \   00000014   0x4325             ORRS     R5,R5,R4
   \   00000016   0x....             LDR      R4,??DataTable7_1  ;; 0xe000e280
   \   00000018   0x6025             STR      R5,[R4, #+0]
   \   0000001A   0x....             LDR      R4,??DataTable7_2  ;; 0xe000e100
   \   0000001C   0x6824             LDR      R4,[R4, #+0]
   \   0000001E   0x2580             MOVS     R5,#+128
   \   00000020   0x046D             LSLS     R5,R5,#+17       ;; #+16777216
   \   00000022   0x4325             ORRS     R5,R5,R4
   \   00000024   0x....             LDR      R4,??DataTable7_2  ;; 0xe000e100
   \   00000026   0x6025             STR      R5,[R4, #+0]
   \   00000028   0x....             LDR      R4,??DataTable7_14  ;; 0xe000e418
   \   0000002A   0x6824             LDR      R4,[R4, #+0]
   \   0000002C   0xB2D2             UXTB     R2,R2
   \   0000002E   0x0195             LSLS     R5,R2,#+6
   \   00000030   0x4325             ORRS     R5,R5,R4
   \   00000032   0x....             LDR      R4,??DataTable7_14  ;; 0xe000e418
   \   00000034   0x6025             STR      R5,[R4, #+0]
     69              AFE_DI |= AFE_DI_INTEN3_MASK;
   \   00000036   0x....             LDR      R4,??DataTable7_4  ;; 0x40030020
   \   00000038   0x6824             LDR      R4,[R4, #+0]
   \   0000003A   0x2580             MOVS     R5,#+128
   \   0000003C   0x042D             LSLS     R5,R5,#+16       ;; #+8388608
   \   0000003E   0x4325             ORRS     R5,R5,R4
   \   00000040   0x....             LDR      R4,??DataTable7_4  ;; 0x40030020
   \   00000042   0x6025             STR      R5,[R4, #+0]
     70            }
     71            AFE_CH3_DR  = ((dly>0)?dly:0);        /* update only if value is positive   */
   \                     ??AFE_CH3_Init_0: (+1)
   \   00000044   0xB209             SXTH     R1,R1
   \   00000046   0x2901             CMP      R1,#+1
   \   00000048   0xDB02             BLT      ??AFE_CH3_Init_1
   \   0000004A   0xB209             SXTH     R1,R1
   \   0000004C   0x000C             MOVS     R4,R1
   \   0000004E   0xE000             B        ??AFE_CH3_Init_2
   \                     ??AFE_CH3_Init_1: (+1)
   \   00000050   0x2400             MOVS     R4,#+0
   \                     ??AFE_CH3_Init_2: (+1)
   \   00000052   0x....             LDR      R5,??DataTable7_15  ;; 0x40030038
   \   00000054   0x602C             STR      R4,[R5, #+0]
     72            AFE_CH3_CFR = ch.CFR;
   \   00000056   0x....             LDR      R4,??DataTable7_16  ;; 0x4003000c
   \   00000058   0x6020             STR      R0,[R4, #+0]
     73          }
   \   0000005A   0xBD30             POP      {R4,R5,PC}       ;; return
     74          
     75          /******************************************************************************
     76           * interrupt function definitions                                             *
     77           ******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
     78          weak void afe0_isr (void)
     79          {
   \                     afe0_isr: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
     80            register uint32 tmp = AFE_SR;
   \   00000002   0x....             LDR      R0,??DataTable7_17  ;; 0x4003005c
   \   00000004   0x6804             LDR      R4,[R0, #+0]
     81            if (tmp & AFE_SR_COC0_MASK) { pCallbackAFE_CH0 (COC_CALLBACK, AFE_CH0_RR); }
   \   00000006   0x2C00             CMP      R4,#+0
   \   00000008   0xD505             BPL      ??afe0_isr_0
   \   0000000A   0x....             LDR      R0,??DataTable7_18  ;; 0x40030044
   \   0000000C   0x6801             LDR      R1,[R0, #+0]
   \   0000000E   0x2001             MOVS     R0,#+1
   \   00000010   0x....             LDR      R2,??DataTable7
   \   00000012   0x6812             LDR      R2,[R2, #+0]
   \   00000014   0x4790             BLX      R2
     82            if (tmp & AFE_SR_OVR0_MASK) { pCallbackAFE_CH0 (OVR_CALLBACK, AFE_CH0_RR); }
   \                     ??afe0_isr_0: (+1)
   \   00000016   0x01E0             LSLS     R0,R4,#+7
   \   00000018   0xD505             BPL      ??afe0_isr_1
   \   0000001A   0x....             LDR      R0,??DataTable7_18  ;; 0x40030044
   \   0000001C   0x6801             LDR      R1,[R0, #+0]
   \   0000001E   0x2002             MOVS     R0,#+2
   \   00000020   0x....             LDR      R2,??DataTable7
   \   00000022   0x6812             LDR      R2,[R2, #+0]
   \   00000024   0x4790             BLX      R2
     83          }
   \                     ??afe0_isr_1: (+1)
   \   00000026   0xBD10             POP      {R4,PC}          ;; return
     84          

   \                                 In section .text, align 2, keep-with-next
     85          weak void afe1_isr (void)
     86          {
   \                     afe1_isr: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
     87            register uint32 tmp = AFE_SR;
   \   00000002   0x....             LDR      R0,??DataTable7_17  ;; 0x4003005c
   \   00000004   0x6804             LDR      R4,[R0, #+0]
     88            if (tmp & AFE_SR_COC1_MASK) { pCallbackAFE_CH1 (COC_CALLBACK, AFE_CH1_RR); }
   \   00000006   0x0060             LSLS     R0,R4,#+1
   \   00000008   0xD505             BPL      ??afe1_isr_0
   \   0000000A   0x....             LDR      R0,??DataTable7_19  ;; 0x40030048
   \   0000000C   0x6801             LDR      R1,[R0, #+0]
   \   0000000E   0x2001             MOVS     R0,#+1
   \   00000010   0x....             LDR      R2,??DataTable7_7
   \   00000012   0x6812             LDR      R2,[R2, #+0]
   \   00000014   0x4790             BLX      R2
     89            if (tmp & AFE_SR_OVR1_MASK) { pCallbackAFE_CH1 (OVR_CALLBACK, AFE_CH1_RR); }
   \                     ??afe1_isr_0: (+1)
   \   00000016   0x0220             LSLS     R0,R4,#+8
   \   00000018   0xD505             BPL      ??afe1_isr_1
   \   0000001A   0x....             LDR      R0,??DataTable7_19  ;; 0x40030048
   \   0000001C   0x6801             LDR      R1,[R0, #+0]
   \   0000001E   0x2002             MOVS     R0,#+2
   \   00000020   0x....             LDR      R2,??DataTable7_7
   \   00000022   0x6812             LDR      R2,[R2, #+0]
   \   00000024   0x4790             BLX      R2
     90          }
   \                     ??afe1_isr_1: (+1)
   \   00000026   0xBD10             POP      {R4,PC}          ;; return
     91          

   \                                 In section .text, align 2, keep-with-next
     92          weak void afe2_isr (void)
     93          {
   \                     afe2_isr: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
     94            register uint32 tmp = AFE_SR;
   \   00000002   0x....             LDR      R0,??DataTable7_17  ;; 0x4003005c
   \   00000004   0x6804             LDR      R4,[R0, #+0]
     95            if (tmp & AFE_SR_COC2_MASK) { pCallbackAFE_CH2 (COC_CALLBACK, AFE_CH2_RR); }
   \   00000006   0x00A0             LSLS     R0,R4,#+2
   \   00000008   0xD505             BPL      ??afe2_isr_0
   \   0000000A   0x....             LDR      R0,??DataTable7_20  ;; 0x4003004c
   \   0000000C   0x6801             LDR      R1,[R0, #+0]
   \   0000000E   0x2001             MOVS     R0,#+1
   \   00000010   0x....             LDR      R2,??DataTable7_10
   \   00000012   0x6812             LDR      R2,[R2, #+0]
   \   00000014   0x4790             BLX      R2
     96            if (tmp & AFE_SR_OVR2_MASK) { pCallbackAFE_CH2 (OVR_CALLBACK, AFE_CH2_RR); }
   \                     ??afe2_isr_0: (+1)
   \   00000016   0x0260             LSLS     R0,R4,#+9
   \   00000018   0xD505             BPL      ??afe2_isr_1
   \   0000001A   0x....             LDR      R0,??DataTable7_20  ;; 0x4003004c
   \   0000001C   0x6801             LDR      R1,[R0, #+0]
   \   0000001E   0x2002             MOVS     R0,#+2
   \   00000020   0x....             LDR      R2,??DataTable7_10
   \   00000022   0x6812             LDR      R2,[R2, #+0]
   \   00000024   0x4790             BLX      R2
     97          }
   \                     ??afe2_isr_1: (+1)
   \   00000026   0xBD10             POP      {R4,PC}          ;; return
     98          

   \                                 In section .text, align 2, keep-with-next
     99          weak void afe3_isr (void)
    100          {
   \                     afe3_isr: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
    101            register uint32 tmp = AFE_SR;
   \   00000002   0x....             LDR      R0,??DataTable7_17  ;; 0x4003005c
   \   00000004   0x6804             LDR      R4,[R0, #+0]
    102            if (tmp & AFE_SR_COC3_MASK) { pCallbackAFE_CH3 (COC_CALLBACK, AFE_CH3_RR); }
   \   00000006   0x00E0             LSLS     R0,R4,#+3
   \   00000008   0xD505             BPL      ??afe3_isr_0
   \   0000000A   0x....             LDR      R0,??DataTable7_21  ;; 0x40030050
   \   0000000C   0x6801             LDR      R1,[R0, #+0]
   \   0000000E   0x2001             MOVS     R0,#+1
   \   00000010   0x....             LDR      R2,??DataTable7_13
   \   00000012   0x6812             LDR      R2,[R2, #+0]
   \   00000014   0x4790             BLX      R2
    103            if (tmp & AFE_SR_OVR3_MASK) { pCallbackAFE_CH3 (OVR_CALLBACK, AFE_CH3_RR); }
   \                     ??afe3_isr_0: (+1)
   \   00000016   0x02A0             LSLS     R0,R4,#+10
   \   00000018   0xD505             BPL      ??afe3_isr_1
   \   0000001A   0x....             LDR      R0,??DataTable7_21  ;; 0x40030050
   \   0000001C   0x6801             LDR      R1,[R0, #+0]
   \   0000001E   0x2002             MOVS     R0,#+2
   \   00000020   0x....             LDR      R2,??DataTable7_13
   \   00000022   0x6812             LDR      R2,[R2, #+0]
   \   00000024   0x4790             BLX      R2
    104          }
   \                     ??afe3_isr_1: (+1)
   \   00000026   0xBD10             POP      {R4,PC}          ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7:
   \   00000000   0x........         DC32     pCallbackAFE_CH0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_1:
   \   00000000   0xE000E280         DC32     0xe000e280

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_2:
   \   00000000   0xE000E100         DC32     0xe000e100

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_3:
   \   00000000   0xE000E414         DC32     0xe000e414

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_4:
   \   00000000   0x40030020         DC32     0x40030020

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_5:
   \   00000000   0x4003002C         DC32     0x4003002c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_6:
   \   00000000   0x40030000         DC32     0x40030000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_7:
   \   00000000   0x........         DC32     pCallbackAFE_CH1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_8:
   \   00000000   0x40030030         DC32     0x40030030

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_9:
   \   00000000   0x40030004         DC32     0x40030004

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_10:
   \   00000000   0x........         DC32     pCallbackAFE_CH2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_11:
   \   00000000   0x40030034         DC32     0x40030034

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_12:
   \   00000000   0x40030008         DC32     0x40030008

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_13:
   \   00000000   0x........         DC32     pCallbackAFE_CH3

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_14:
   \   00000000   0xE000E418         DC32     0xe000e418

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_15:
   \   00000000   0x40030038         DC32     0x40030038

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_16:
   \   00000000   0x4003000C         DC32     0x4003000c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_17:
   \   00000000   0x4003005C         DC32     0x4003005c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_18:
   \   00000000   0x40030044         DC32     0x40030044

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_19:
   \   00000000   0x40030048         DC32     0x40030048

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_20:
   \   00000000   0x4003004C         DC32     0x4003004c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_21:
   \   00000000   0x40030050         DC32     0x40030050
    105          /******************************************************************************
    106           * End of module                                                              *
    107           ******************************************************************************/

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      12   AFE_CH0_Init
      12   AFE_CH1_Init
      12   AFE_CH2_Init
      12   AFE_CH3_Init
       8   afe0_isr
         8   -- Indirect call
       8   afe1_isr
         8   -- Indirect call
       8   afe2_isr
         8   -- Indirect call
       8   afe3_isr
         8   -- Indirect call


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable7
       4  ??DataTable7_1
       4  ??DataTable7_10
       4  ??DataTable7_11
       4  ??DataTable7_12
       4  ??DataTable7_13
       4  ??DataTable7_14
       4  ??DataTable7_15
       4  ??DataTable7_16
       4  ??DataTable7_17
       4  ??DataTable7_18
       4  ??DataTable7_19
       4  ??DataTable7_2
       4  ??DataTable7_20
       4  ??DataTable7_21
       4  ??DataTable7_3
       4  ??DataTable7_4
       4  ??DataTable7_5
       4  ??DataTable7_6
       4  ??DataTable7_7
       4  ??DataTable7_8
       4  ??DataTable7_9
      92  AFE_CH0_Init
      92  AFE_CH1_Init
      92  AFE_CH2_Init
      92  AFE_CH3_Init
      40  afe0_isr
      40  afe1_isr
      40  afe2_isr
      40  afe3_isr
       4  pCallbackAFE_CH0
       4  pCallbackAFE_CH1
       4  pCallbackAFE_CH2
       4  pCallbackAFE_CH3

 
  16 bytes in section .bss
 616 bytes in section .text
 
 616 bytes of CODE memory
  16 bytes of DATA memory

Errors: none
Warnings: none
