###############################################################################
#
# IAR ANSI C/C++ Compiler V7.40.3.8902/W32 for ARM        17/Mar/2017  15:18:12
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  C:\Freescale\KM128SWDRV_R4_1_6\src\drivers\uart\uart.c
#    Command line =  
#        C:\Freescale\KM128SWDRV_R4_1_6\src\drivers\uart\uart.c -D NDEBUG -lCN
#        C:\Freescale\KM128SWDRV_R4_1_6\build\iar_7_40\projects\uart_test\Release\List\
#        -o
#        C:\Freescale\KM128SWDRV_R4_1_6\build\iar_7_40\projects\uart_test\Release\Obj\
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M0+ --no_mem_idioms -e --fpu=None --dlib_config
#        D:\IAR7.4anzhuang\arm\INC\c\DLib_Config_Normal.h -I
#        C:\Freescale\KM128SWDRV_R4_1_6\build\iar_7_40\projects\uart_test\..\..\..\..\src\common\
#        -I
#        C:\Freescale\KM128SWDRV_R4_1_6\build\iar_7_40\projects\uart_test\..\..\..\..\src\drivers\
#        -I
#        C:\Freescale\KM128SWDRV_R4_1_6\build\iar_7_40\projects\uart_test\..\..\..\..\src\freemaster\
#        -I
#        C:\Freescale\KM128SWDRV_R4_1_6\build\iar_7_40\projects\uart_test\..\..\..\..\src\projects\uart_test\
#        -I
#        C:\Freescale\KM128SWDRV_R4_1_6\build\iar_7_40\projects\uart_test\..\..\..\..\src\toolchain\iar\
#        -On --require_prototypes
#    List file    =  
#        C:\Freescale\KM128SWDRV_R4_1_6\build\iar_7_40\projects\uart_test\Release\List\uart.lst
#    Object file  =  
#        C:\Freescale\KM128SWDRV_R4_1_6\build\iar_7_40\projects\uart_test\Release\Obj\uart.o
#
###############################################################################

C:\Freescale\KM128SWDRV_R4_1_6\src\drivers\uart\uart.c
      1          /******************************************************************************
      2           * (c) Copyright 2010-2015, Freescale Semiconductor Inc.
      3           * ALL RIGHTS RESERVED.
      4           ***************************************************************************//*!
      5           * @file      uart.c
      6           * @version   1.0.5.0
      7           * @date      Apr-20-2015
      8           * @brief     Universal Asynchronous Receiver/Transmitter (UART) driver source
      9           *            code.
     10           ******************************************************************************/
     11          #include "common.h"
     12          #include "uart.h"
     13          
     14          #if !defined(MCU_MKM34ZA5)
     15            #error "The uart.c module is specific to the MKMxxZxxACxx5 microcontrollers."
     16          #endif
     17          
     18          /******************************************************************************
     19           * data type definitions                                                      *
     20           ******************************************************************************/

   \                                 In section .bss, align 4
     21          static UART_CALLBACK pCallbackUART0_UART1;
   \                     pCallbackUART0_UART1:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     22          static UART_CALLBACK pCallbackUART2_UART3;
   \                     pCallbackUART2_UART3:
   \   00000000                      DS8 4
     23          
     24          /******************************************************************************
     25           * public function definitions                                                *
     26           ******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
     27          void UART_InstallCallbackUART0_UART1 (uint8 ip, UART_CALLBACK pCallback)
     28          {
   \                     UART_InstallCallbackUART0_UART1: (+1)
   \   00000000   0xB500             PUSH     {LR}
     29            if (pCallback) { pCallbackUART0_UART1 = pCallback; NVIC_SetIsr(INT_SCI0_SCI1,ip); }
   \   00000002   0x000A             MOVS     R2,R1
   \   00000004   0x2A00             CMP      R2,#+0
   \   00000006   0xD016             BEQ      ??UART_InstallCallbackUART0_UART1_0
   \   00000008   0x....             LDR      R2,??DataTable5
   \   0000000A   0x6011             STR      R1,[R2, #+0]
   \   0000000C   0x....             LDR      R2,??DataTable5_1  ;; 0xe000e280
   \   0000000E   0x6812             LDR      R2,[R2, #+0]
   \   00000010   0x2380             MOVS     R3,#+128
   \   00000012   0x031B             LSLS     R3,R3,#+12       ;; #+524288
   \   00000014   0x4313             ORRS     R3,R3,R2
   \   00000016   0x....             LDR      R2,??DataTable5_1  ;; 0xe000e280
   \   00000018   0x6013             STR      R3,[R2, #+0]
   \   0000001A   0x....             LDR      R2,??DataTable5_2  ;; 0xe000e100
   \   0000001C   0x6812             LDR      R2,[R2, #+0]
   \   0000001E   0x2380             MOVS     R3,#+128
   \   00000020   0x031B             LSLS     R3,R3,#+12       ;; #+524288
   \   00000022   0x4313             ORRS     R3,R3,R2
   \   00000024   0x....             LDR      R2,??DataTable5_2  ;; 0xe000e100
   \   00000026   0x6013             STR      R3,[R2, #+0]
   \   00000028   0x....             LDR      R2,??DataTable5_3  ;; 0xe000e410
   \   0000002A   0x6812             LDR      R2,[R2, #+0]
   \   0000002C   0xB2C0             UXTB     R0,R0
   \   0000002E   0x0783             LSLS     R3,R0,#+30
   \   00000030   0x4313             ORRS     R3,R3,R2
   \   00000032   0x....             LDR      R2,??DataTable5_3  ;; 0xe000e410
   \   00000034   0x6013             STR      R3,[R2, #+0]
     30          }
   \                     ??UART_InstallCallbackUART0_UART1_0: (+1)
   \   00000036   0xBD00             POP      {PC}             ;; return
     31          

   \                                 In section .text, align 2, keep-with-next
     32          void UART_InstallCallbackUART2_UART3 (uint8 ip, UART_CALLBACK pCallback)
     33          {
   \                     UART_InstallCallbackUART2_UART3: (+1)
   \   00000000   0xB500             PUSH     {LR}
     34            if (pCallback) { pCallbackUART2_UART3 = pCallback; NVIC_SetIsr(INT_SCI2_SCI3,ip); }
   \   00000002   0x000A             MOVS     R2,R1
   \   00000004   0x2A00             CMP      R2,#+0
   \   00000006   0xD016             BEQ      ??UART_InstallCallbackUART2_UART3_0
   \   00000008   0x....             LDR      R2,??DataTable5_4
   \   0000000A   0x6011             STR      R1,[R2, #+0]
   \   0000000C   0x....             LDR      R2,??DataTable5_1  ;; 0xe000e280
   \   0000000E   0x6812             LDR      R2,[R2, #+0]
   \   00000010   0x2380             MOVS     R3,#+128
   \   00000012   0x035B             LSLS     R3,R3,#+13       ;; #+1048576
   \   00000014   0x4313             ORRS     R3,R3,R2
   \   00000016   0x....             LDR      R2,??DataTable5_1  ;; 0xe000e280
   \   00000018   0x6013             STR      R3,[R2, #+0]
   \   0000001A   0x....             LDR      R2,??DataTable5_2  ;; 0xe000e100
   \   0000001C   0x6812             LDR      R2,[R2, #+0]
   \   0000001E   0x2380             MOVS     R3,#+128
   \   00000020   0x035B             LSLS     R3,R3,#+13       ;; #+1048576
   \   00000022   0x4313             ORRS     R3,R3,R2
   \   00000024   0x....             LDR      R2,??DataTable5_2  ;; 0xe000e100
   \   00000026   0x6013             STR      R3,[R2, #+0]
   \   00000028   0x....             LDR      R2,??DataTable6  ;; 0xe000e414
   \   0000002A   0x6812             LDR      R2,[R2, #+0]
   \   0000002C   0xB2C0             UXTB     R0,R0
   \   0000002E   0x0183             LSLS     R3,R0,#+6
   \   00000030   0x4313             ORRS     R3,R3,R2
   \   00000032   0x....             LDR      R2,??DataTable6  ;; 0xe000e414
   \   00000034   0x6013             STR      R3,[R2, #+0]
     35          }
   \                     ??UART_InstallCallbackUART2_UART3_0: (+1)
   \   00000036   0xBD00             POP      {PC}             ;; return
     36          

   \                                 In section .text, align 2, keep-with-next
     37          void UART0_Init (tUART sci)
     38          {
   \                     UART0_Init: (+1)
   \   00000000   0xB407             PUSH     {R0-R2}
     39            UART0_C2 &= ~(UART_C2_TE_MASK|UART_C2_RE_MASK );  /* disable uart operation */
   \   00000002   0x....             LDR      R0,??DataTable6_1  ;; 0x4006a003
   \   00000004   0x7800             LDRB     R0,[R0, #+0]
   \   00000006   0x21F3             MOVS     R1,#+243
   \   00000008   0x4001             ANDS     R1,R1,R0
   \   0000000A   0x....             LDR      R0,??DataTable6_1  ;; 0x4006a003
   \   0000000C   0x7001             STRB     R1,[R0, #+0]
     40            UART0_BDH     = sci.BDH;
   \   0000000E   0x4668             MOV      R0,SP
   \   00000010   0x7800             LDRB     R0,[R0, #+0]
   \   00000012   0x....             LDR      R1,??DataTable5_5  ;; 0x4006a000
   \   00000014   0x7008             STRB     R0,[R1, #+0]
     41            UART0_BDL     = sci.BDL;
   \   00000016   0x4668             MOV      R0,SP
   \   00000018   0x7840             LDRB     R0,[R0, #+1]
   \   0000001A   0x....             LDR      R1,??DataTable5_6  ;; 0x4006a001
   \   0000001C   0x7008             STRB     R0,[R1, #+0]
     42            UART0_C1      = sci.C1;
   \   0000001E   0x4668             MOV      R0,SP
   \   00000020   0x7880             LDRB     R0,[R0, #+2]
   \   00000022   0x....             LDR      R1,??DataTable5_7  ;; 0x4006a002
   \   00000024   0x7008             STRB     R0,[R1, #+0]
     43            UART0_S2      = sci.S2;
   \   00000026   0x4668             MOV      R0,SP
   \   00000028   0x7900             LDRB     R0,[R0, #+4]
   \   0000002A   0x....             LDR      R1,??DataTable5_8  ;; 0x4006a005
   \   0000002C   0x7008             STRB     R0,[R1, #+0]
     44            UART0_C3      = sci.C3;
   \   0000002E   0x4668             MOV      R0,SP
   \   00000030   0x7940             LDRB     R0,[R0, #+5]
   \   00000032   0x....             LDR      R1,??DataTable5_9  ;; 0x4006a006
   \   00000034   0x7008             STRB     R0,[R1, #+0]
     45            UART0_MA1     = sci.MA1;
   \   00000036   0x4668             MOV      R0,SP
   \   00000038   0x7980             LDRB     R0,[R0, #+6]
   \   0000003A   0x....             LDR      R1,??DataTable5_10  ;; 0x4006a008
   \   0000003C   0x7008             STRB     R0,[R1, #+0]
     46            UART0_MA2     = sci.MA2;
   \   0000003E   0x4668             MOV      R0,SP
   \   00000040   0x79C0             LDRB     R0,[R0, #+7]
   \   00000042   0x....             LDR      R1,??DataTable5_11  ;; 0x4006a009
   \   00000044   0x7008             STRB     R0,[R1, #+0]
     47            UART0_C4      = sci.C4;
   \   00000046   0x4668             MOV      R0,SP
   \   00000048   0x7A00             LDRB     R0,[R0, #+8]
   \   0000004A   0x....             LDR      R1,??DataTable5_12  ;; 0x4006a00a
   \   0000004C   0x7008             STRB     R0,[R1, #+0]
     48            UART0_C5      = sci.C5;
   \   0000004E   0x4668             MOV      R0,SP
   \   00000050   0x7A40             LDRB     R0,[R0, #+9]
   \   00000052   0x....             LDR      R1,??DataTable5_13  ;; 0x4006a00b
   \   00000054   0x7008             STRB     R0,[R1, #+0]
     49            UART0_C2      = sci.C2;                           /* enable uart operation  */
   \   00000056   0x4668             MOV      R0,SP
   \   00000058   0x78C0             LDRB     R0,[R0, #+3]
   \   0000005A   0x....             LDR      R1,??DataTable6_1  ;; 0x4006a003
   \   0000005C   0x7008             STRB     R0,[R1, #+0]
     50          }
   \   0000005E   0xB003             ADD      SP,SP,#+12
   \   00000060   0x4770             BX       LR               ;; return
     51          

   \                                 In section .text, align 2, keep-with-next
     52          void UART1_Init (tUART sci)
     53          {
   \                     UART1_Init: (+1)
   \   00000000   0xB407             PUSH     {R0-R2}
     54            UART1_C2 &= ~(UART_C2_TE_MASK|UART_C2_RE_MASK );  /* disable uart operation */
   \   00000002   0x....             LDR      R0,??DataTable6_2  ;; 0x4006b003
   \   00000004   0x7800             LDRB     R0,[R0, #+0]
   \   00000006   0x21F3             MOVS     R1,#+243
   \   00000008   0x4001             ANDS     R1,R1,R0
   \   0000000A   0x....             LDR      R0,??DataTable6_2  ;; 0x4006b003
   \   0000000C   0x7001             STRB     R1,[R0, #+0]
     55            UART1_BDH     = sci.BDH;
   \   0000000E   0x4668             MOV      R0,SP
   \   00000010   0x7800             LDRB     R0,[R0, #+0]
   \   00000012   0x....             LDR      R1,??DataTable5_14  ;; 0x4006b000
   \   00000014   0x7008             STRB     R0,[R1, #+0]
     56            UART1_BDL     = sci.BDL;
   \   00000016   0x4668             MOV      R0,SP
   \   00000018   0x7840             LDRB     R0,[R0, #+1]
   \   0000001A   0x....             LDR      R1,??DataTable5_15  ;; 0x4006b001
   \   0000001C   0x7008             STRB     R0,[R1, #+0]
     57            UART1_C1      = sci.C1;
   \   0000001E   0x4668             MOV      R0,SP
   \   00000020   0x7880             LDRB     R0,[R0, #+2]
   \   00000022   0x....             LDR      R1,??DataTable5_16  ;; 0x4006b002
   \   00000024   0x7008             STRB     R0,[R1, #+0]
     58            UART1_S2      = sci.S2;
   \   00000026   0x4668             MOV      R0,SP
   \   00000028   0x7900             LDRB     R0,[R0, #+4]
   \   0000002A   0x....             LDR      R1,??DataTable5_17  ;; 0x4006b005
   \   0000002C   0x7008             STRB     R0,[R1, #+0]
     59            UART1_C3      = sci.C3;
   \   0000002E   0x4668             MOV      R0,SP
   \   00000030   0x7940             LDRB     R0,[R0, #+5]
   \   00000032   0x....             LDR      R1,??DataTable5_18  ;; 0x4006b006
   \   00000034   0x7008             STRB     R0,[R1, #+0]
     60            UART1_MA1     = sci.MA1;
   \   00000036   0x4668             MOV      R0,SP
   \   00000038   0x7980             LDRB     R0,[R0, #+6]
   \   0000003A   0x....             LDR      R1,??DataTable5_19  ;; 0x4006b008
   \   0000003C   0x7008             STRB     R0,[R1, #+0]
     61            UART1_MA2     = sci.MA2;
   \   0000003E   0x4668             MOV      R0,SP
   \   00000040   0x79C0             LDRB     R0,[R0, #+7]
   \   00000042   0x....             LDR      R1,??DataTable6_3  ;; 0x4006b009
   \   00000044   0x7008             STRB     R0,[R1, #+0]
     62            UART1_C4      = sci.C4;
   \   00000046   0x4668             MOV      R0,SP
   \   00000048   0x7A00             LDRB     R0,[R0, #+8]
   \   0000004A   0x....             LDR      R1,??DataTable6_4  ;; 0x4006b00a
   \   0000004C   0x7008             STRB     R0,[R1, #+0]
     63            UART1_C5      = sci.C5;
   \   0000004E   0x4668             MOV      R0,SP
   \   00000050   0x7A40             LDRB     R0,[R0, #+9]
   \   00000052   0x....             LDR      R1,??DataTable6_5  ;; 0x4006b00b
   \   00000054   0x7008             STRB     R0,[R1, #+0]
     64            UART1_C2      = sci.C2;                            /* enable uart operation */
   \   00000056   0x4668             MOV      R0,SP
   \   00000058   0x78C0             LDRB     R0,[R0, #+3]
   \   0000005A   0x....             LDR      R1,??DataTable6_2  ;; 0x4006b003
   \   0000005C   0x7008             STRB     R0,[R1, #+0]
     65          }
   \   0000005E   0xB003             ADD      SP,SP,#+12
   \   00000060   0x4770             BX       LR               ;; return
     66          

   \                                 In section .text, align 2, keep-with-next
     67          void UART2_Init (tUART sci)
     68          {
   \                     UART2_Init: (+1)
   \   00000000   0xB407             PUSH     {R0-R2}
     69            UART2_C2 &= ~(UART_C2_TE_MASK|UART_C2_RE_MASK );  /* disable uart operation */
   \   00000002   0x....             LDR      R0,??DataTable6_6  ;; 0x4006c003
   \   00000004   0x7800             LDRB     R0,[R0, #+0]
   \   00000006   0x21F3             MOVS     R1,#+243
   \   00000008   0x4001             ANDS     R1,R1,R0
   \   0000000A   0x....             LDR      R0,??DataTable6_6  ;; 0x4006c003
   \   0000000C   0x7001             STRB     R1,[R0, #+0]
     70            UART2_BDH     = sci.BDH;
   \   0000000E   0x4668             MOV      R0,SP
   \   00000010   0x7800             LDRB     R0,[R0, #+0]
   \   00000012   0x....             LDR      R1,??DataTable6_7  ;; 0x4006c000
   \   00000014   0x7008             STRB     R0,[R1, #+0]
     71            UART2_BDL     = sci.BDL;
   \   00000016   0x4668             MOV      R0,SP
   \   00000018   0x7840             LDRB     R0,[R0, #+1]
   \   0000001A   0x....             LDR      R1,??DataTable6_8  ;; 0x4006c001
   \   0000001C   0x7008             STRB     R0,[R1, #+0]
     72            UART2_C1      = sci.C1;
   \   0000001E   0x4668             MOV      R0,SP
   \   00000020   0x7880             LDRB     R0,[R0, #+2]
   \   00000022   0x....             LDR      R1,??DataTable6_9  ;; 0x4006c002
   \   00000024   0x7008             STRB     R0,[R1, #+0]
     73            UART2_S2      = sci.S2;
   \   00000026   0x4668             MOV      R0,SP
   \   00000028   0x7900             LDRB     R0,[R0, #+4]
   \   0000002A   0x....             LDR      R1,??DataTable6_10  ;; 0x4006c005
   \   0000002C   0x7008             STRB     R0,[R1, #+0]
     74            UART2_C3      = sci.C3;
   \   0000002E   0x4668             MOV      R0,SP
   \   00000030   0x7940             LDRB     R0,[R0, #+5]
   \   00000032   0x....             LDR      R1,??DataTable6_11  ;; 0x4006c006
   \   00000034   0x7008             STRB     R0,[R1, #+0]
     75            UART2_MA1     = sci.MA1;
   \   00000036   0x4668             MOV      R0,SP
   \   00000038   0x7980             LDRB     R0,[R0, #+6]
   \   0000003A   0x....             LDR      R1,??DataTable6_12  ;; 0x4006c008
   \   0000003C   0x7008             STRB     R0,[R1, #+0]
     76            UART2_MA2     = sci.MA2;
   \   0000003E   0x4668             MOV      R0,SP
   \   00000040   0x79C0             LDRB     R0,[R0, #+7]
   \   00000042   0x....             LDR      R1,??DataTable6_13  ;; 0x4006c009
   \   00000044   0x7008             STRB     R0,[R1, #+0]
     77            UART2_C4      = sci.C4;
   \   00000046   0x4668             MOV      R0,SP
   \   00000048   0x7A00             LDRB     R0,[R0, #+8]
   \   0000004A   0x....             LDR      R1,??DataTable6_14  ;; 0x4006c00a
   \   0000004C   0x7008             STRB     R0,[R1, #+0]
     78            UART2_C5      = sci.C5;
   \   0000004E   0x4668             MOV      R0,SP
   \   00000050   0x7A40             LDRB     R0,[R0, #+9]
   \   00000052   0x....             LDR      R1,??DataTable6_15  ;; 0x4006c00b
   \   00000054   0x7008             STRB     R0,[R1, #+0]
     79            UART2_C2      = sci.C2;                            /* enable uart operation */
   \   00000056   0x4668             MOV      R0,SP
   \   00000058   0x78C0             LDRB     R0,[R0, #+3]
   \   0000005A   0x....             LDR      R1,??DataTable6_6  ;; 0x4006c003
   \   0000005C   0x7008             STRB     R0,[R1, #+0]
     80          }
   \   0000005E   0xB003             ADD      SP,SP,#+12
   \   00000060   0x4770             BX       LR               ;; return
     81          

   \                                 In section .text, align 2, keep-with-next
     82          void UART3_Init (tUART sci)
     83          {
   \                     UART3_Init: (+1)
   \   00000000   0xB407             PUSH     {R0-R2}
     84            UART3_C2 &= ~(UART_C2_TE_MASK|UART_C2_RE_MASK );  /* disable uart operation */
   \   00000002   0x....             LDR      R0,??DataTable6_16  ;; 0x4006d003
   \   00000004   0x7800             LDRB     R0,[R0, #+0]
   \   00000006   0x21F3             MOVS     R1,#+243
   \   00000008   0x4001             ANDS     R1,R1,R0
   \   0000000A   0x....             LDR      R0,??DataTable6_16  ;; 0x4006d003
   \   0000000C   0x7001             STRB     R1,[R0, #+0]
     85            UART3_BDH     = sci.BDH;
   \   0000000E   0x4668             MOV      R0,SP
   \   00000010   0x7800             LDRB     R0,[R0, #+0]
   \   00000012   0x....             LDR      R1,??DataTable6_17  ;; 0x4006d000
   \   00000014   0x7008             STRB     R0,[R1, #+0]
     86            UART3_BDL     = sci.BDL;
   \   00000016   0x4668             MOV      R0,SP
   \   00000018   0x7840             LDRB     R0,[R0, #+1]
   \   0000001A   0x....             LDR      R1,??DataTable6_18  ;; 0x4006d001
   \   0000001C   0x7008             STRB     R0,[R1, #+0]
     87            UART3_C1      = sci.C1;
   \   0000001E   0x4668             MOV      R0,SP
   \   00000020   0x7880             LDRB     R0,[R0, #+2]
   \   00000022   0x....             LDR      R1,??DataTable6_19  ;; 0x4006d002
   \   00000024   0x7008             STRB     R0,[R1, #+0]
     88            UART3_S2      = sci.S2;
   \   00000026   0x4668             MOV      R0,SP
   \   00000028   0x7900             LDRB     R0,[R0, #+4]
   \   0000002A   0x....             LDR      R1,??DataTable6_20  ;; 0x4006d005
   \   0000002C   0x7008             STRB     R0,[R1, #+0]
     89            UART3_C3      = sci.C3;
   \   0000002E   0x4668             MOV      R0,SP
   \   00000030   0x7940             LDRB     R0,[R0, #+5]
   \   00000032   0x....             LDR      R1,??DataTable6_21  ;; 0x4006d006
   \   00000034   0x7008             STRB     R0,[R1, #+0]
     90            UART3_MA1     = sci.MA1;
   \   00000036   0x4668             MOV      R0,SP
   \   00000038   0x7980             LDRB     R0,[R0, #+6]
   \   0000003A   0x....             LDR      R1,??DataTable6_22  ;; 0x4006d008
   \   0000003C   0x7008             STRB     R0,[R1, #+0]
     91            UART3_MA2     = sci.MA2;
   \   0000003E   0x4668             MOV      R0,SP
   \   00000040   0x79C0             LDRB     R0,[R0, #+7]
   \   00000042   0x....             LDR      R1,??DataTable6_23  ;; 0x4006d009
   \   00000044   0x7008             STRB     R0,[R1, #+0]
     92            UART3_C4      = sci.C4;
   \   00000046   0x4668             MOV      R0,SP
   \   00000048   0x7A00             LDRB     R0,[R0, #+8]
   \   0000004A   0x....             LDR      R1,??DataTable6_24  ;; 0x4006d00a
   \   0000004C   0x7008             STRB     R0,[R1, #+0]
     93            UART3_C5      = sci.C5;
   \   0000004E   0x4668             MOV      R0,SP
   \   00000050   0x7A40             LDRB     R0,[R0, #+9]
   \   00000052   0x....             LDR      R1,??DataTable6_25  ;; 0x4006d00b
   \   00000054   0x7008             STRB     R0,[R1, #+0]
     94            UART3_C2      = sci.C2;                           /* enable uart operation  */
   \   00000056   0x4668             MOV      R0,SP
   \   00000058   0x78C0             LDRB     R0,[R0, #+3]
   \   0000005A   0x....             LDR      R1,??DataTable6_16  ;; 0x4006d003
   \   0000005C   0x7008             STRB     R0,[R1, #+0]
     95          }
   \   0000005E   0xB003             ADD      SP,SP,#+12
   \   00000060   0x4770             BX       LR               ;; return
     96          
     97          /******************************************************************************
     98           * interrupt function definitions                                             *
     99           ******************************************************************************/
    100          #if defined(__ICCARM__)
    101            #pragma diag_suppress=Pa082
    102          #endif

   \                                 In section .text, align 2, keep-with-next
    103          weak void uart01_isr (void)
    104          {
   \                     uart01_isr: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
    105            register int32 tmp;
    106          
    107            /* process UART0 interrupts                                                 */
    108            if (SIM_SCGC4 & SIM_SCGC4_UART0_MASK)
   \   00000002   0x....             LDR      R0,??DataTable7  ;; 0x4003f034
   \   00000004   0x6800             LDR      R0,[R0, #+0]
   \   00000006   0x0540             LSLS     R0,R0,#+21
   \   00000008   0xD544             BPL      ??uart01_isr_0
    109            {
    110              tmp = UART0_S2 & (UART0_BDH & UART_BDH_RXEDGIE_MASK);
   \   0000000A   0x....             LDR      R0,??DataTable7_1  ;; 0x4006a005
   \   0000000C   0x7800             LDRB     R0,[R0, #+0]
   \   0000000E   0xB2C0             UXTB     R0,R0
   \   00000010   0x....             LDR      R1,??DataTable7_2  ;; 0x4006a000
   \   00000012   0x7809             LDRB     R1,[R1, #+0]
   \   00000014   0xB2C9             UXTB     R1,R1
   \   00000016   0x4001             ANDS     R1,R1,R0
   \   00000018   0x2040             MOVS     R0,#+64
   \   0000001A   0x4001             ANDS     R1,R1,R0
   \   0000001C   0x000C             MOVS     R4,R1
    111              if(tmp != 0)
   \   0000001E   0x2C00             CMP      R4,#+0
   \   00000020   0xD009             BEQ      ??uart01_isr_1
    112              {
    113                UART0_S2 = UART0_S2;  /* clear RXEDGIF interrupt flag                   */
   \   00000022   0x....             LDR      R0,??DataTable7_1  ;; 0x4006a005
   \   00000024   0x7800             LDRB     R0,[R0, #+0]
   \   00000026   0x....             LDR      R1,??DataTable7_1  ;; 0x4006a005
   \   00000028   0x7008             STRB     R0,[R1, #+0]
    114                pCallbackUART0_UART1 (UART0_CALLBACK, UART_EDG_CALLBACK, tmp);
   \   0000002A   0x0022             MOVS     R2,R4
   \   0000002C   0x2108             MOVS     R1,#+8
   \   0000002E   0x2001             MOVS     R0,#+1
   \   00000030   0x....             LDR      R3,??DataTable7_3
   \   00000032   0x681B             LDR      R3,[R3, #+0]
   \   00000034   0x4798             BLX      R3
    115              }
    116          
    117              tmp = UART0_S1 & (UART0_C2 & (UART_C2_RIE_MASK|UART_C2_TCIE_MASK|         \
    118                                            UART_C2_TIE_MASK));
   \                     ??uart01_isr_1: (+1)
   \   00000036   0x....             LDR      R0,??DataTable7_4  ;; 0x4006a004
   \   00000038   0x7800             LDRB     R0,[R0, #+0]
   \   0000003A   0xB2C0             UXTB     R0,R0
   \   0000003C   0x....             LDR      R1,??DataTable6_1  ;; 0x4006a003
   \   0000003E   0x7809             LDRB     R1,[R1, #+0]
   \   00000040   0xB2C9             UXTB     R1,R1
   \   00000042   0x4001             ANDS     R1,R1,R0
   \   00000044   0x20E0             MOVS     R0,#+224
   \   00000046   0x4008             ANDS     R0,R0,R1
   \   00000048   0x0004             MOVS     R4,R0
    119              if(tmp & UART_S1_RDRF_MASK)
   \   0000004A   0x0020             MOVS     R0,R4
   \   0000004C   0x0680             LSLS     R0,R0,#+26
   \   0000004E   0xD505             BPL      ??uart01_isr_2
    120                pCallbackUART0_UART1 (UART0_CALLBACK, UART_RX_CALLBACK, tmp);
   \   00000050   0x0022             MOVS     R2,R4
   \   00000052   0x2102             MOVS     R1,#+2
   \   00000054   0x2001             MOVS     R0,#+1
   \   00000056   0x....             LDR      R3,??DataTable7_3
   \   00000058   0x681B             LDR      R3,[R3, #+0]
   \   0000005A   0x4798             BLX      R3
    121          
    122              if(tmp & (UART_S1_TC_MASK|UART_S1_TDRE_MASK))
   \                     ??uart01_isr_2: (+1)
   \   0000005C   0x0020             MOVS     R0,R4
   \   0000005E   0x21C0             MOVS     R1,#+192
   \   00000060   0x4208             TST      R0,R1
   \   00000062   0xD005             BEQ      ??uart01_isr_3
    123                pCallbackUART0_UART1 (UART0_CALLBACK ,UART_TX_CALLBACK, tmp);
   \   00000064   0x0022             MOVS     R2,R4
   \   00000066   0x2101             MOVS     R1,#+1
   \   00000068   0x2001             MOVS     R0,#+1
   \   0000006A   0x....             LDR      R3,??DataTable7_3
   \   0000006C   0x681B             LDR      R3,[R3, #+0]
   \   0000006E   0x4798             BLX      R3
    124          
    125              tmp = UART0_S1 & (UART0_C3 & (UART_C3_PEIE_MASK|UART_C3_FEIE_MASK|        \
    126                                            UART_C3_NEIE_MASK|UART_C3_ORIE_MASK));
   \                     ??uart01_isr_3: (+1)
   \   00000070   0x....             LDR      R0,??DataTable7_4  ;; 0x4006a004
   \   00000072   0x7800             LDRB     R0,[R0, #+0]
   \   00000074   0xB2C0             UXTB     R0,R0
   \   00000076   0x....             LDR      R1,??DataTable7_5  ;; 0x4006a006
   \   00000078   0x7809             LDRB     R1,[R1, #+0]
   \   0000007A   0xB2C9             UXTB     R1,R1
   \   0000007C   0x4001             ANDS     R1,R1,R0
   \   0000007E   0x0708             LSLS     R0,R1,#+28       ;; ZeroExtS R0,R1,#+28,#+28
   \   00000080   0x0F00             LSRS     R0,R0,#+28
   \   00000082   0x0004             MOVS     R4,R0
    127              if(tmp != 0)
   \   00000084   0x2C00             CMP      R4,#+0
   \   00000086   0xD005             BEQ      ??uart01_isr_0
    128                pCallbackUART0_UART1 (UART0_CALLBACK, UART_ER_CALLBACK, tmp);
   \   00000088   0x0022             MOVS     R2,R4
   \   0000008A   0x2104             MOVS     R1,#+4
   \   0000008C   0x2001             MOVS     R0,#+1
   \   0000008E   0x....             LDR      R3,??DataTable7_3
   \   00000090   0x681B             LDR      R3,[R3, #+0]
   \   00000092   0x4798             BLX      R3
    129            }
    130          
    131            /* process UART1 interrupts                                                 */
    132            if (SIM_SCGC4 & SIM_SCGC4_UART1_MASK)
   \                     ??uart01_isr_0: (+1)
   \   00000094   0x....             LDR      R0,??DataTable7  ;; 0x4003f034
   \   00000096   0x6800             LDR      R0,[R0, #+0]
   \   00000098   0x0500             LSLS     R0,R0,#+20
   \   0000009A   0xD544             BPL      ??uart01_isr_4
    133            {
    134              tmp = UART1_S2 & (UART1_BDH & UART_BDH_RXEDGIE_MASK);
   \   0000009C   0x....             LDR      R0,??DataTable7_6  ;; 0x4006b005
   \   0000009E   0x7800             LDRB     R0,[R0, #+0]
   \   000000A0   0xB2C0             UXTB     R0,R0
   \   000000A2   0x....             LDR      R1,??DataTable7_7  ;; 0x4006b000
   \   000000A4   0x7809             LDRB     R1,[R1, #+0]
   \   000000A6   0xB2C9             UXTB     R1,R1
   \   000000A8   0x4001             ANDS     R1,R1,R0
   \   000000AA   0x2040             MOVS     R0,#+64
   \   000000AC   0x4001             ANDS     R1,R1,R0
   \   000000AE   0x000C             MOVS     R4,R1
    135              if(tmp != 0)
   \   000000B0   0x2C00             CMP      R4,#+0
   \   000000B2   0xD009             BEQ      ??uart01_isr_5
    136              {
    137                UART1_S2 = UART1_S2;  /* clear RXEDGIF interrupt flag                   */
   \   000000B4   0x....             LDR      R0,??DataTable7_6  ;; 0x4006b005
   \   000000B6   0x7800             LDRB     R0,[R0, #+0]
   \   000000B8   0x....             LDR      R1,??DataTable7_6  ;; 0x4006b005
   \   000000BA   0x7008             STRB     R0,[R1, #+0]
    138                pCallbackUART0_UART1 (UART1_CALLBACK, UART_EDG_CALLBACK, tmp);
   \   000000BC   0x0022             MOVS     R2,R4
   \   000000BE   0x2108             MOVS     R1,#+8
   \   000000C0   0x2002             MOVS     R0,#+2
   \   000000C2   0x....             LDR      R3,??DataTable7_3
   \   000000C4   0x681B             LDR      R3,[R3, #+0]
   \   000000C6   0x4798             BLX      R3
    139              }
    140          
    141              tmp = UART1_S1 & (UART1_C2 & (UART_C2_RIE_MASK|UART_C2_TCIE_MASK|         \
    142                                            UART_C2_TIE_MASK));
   \                     ??uart01_isr_5: (+1)
   \   000000C8   0x....             LDR      R0,??DataTable7_8  ;; 0x4006b004
   \   000000CA   0x7800             LDRB     R0,[R0, #+0]
   \   000000CC   0xB2C0             UXTB     R0,R0
   \   000000CE   0x....             LDR      R1,??DataTable6_2  ;; 0x4006b003
   \   000000D0   0x7809             LDRB     R1,[R1, #+0]
   \   000000D2   0xB2C9             UXTB     R1,R1
   \   000000D4   0x4001             ANDS     R1,R1,R0
   \   000000D6   0x20E0             MOVS     R0,#+224
   \   000000D8   0x4008             ANDS     R0,R0,R1
   \   000000DA   0x0004             MOVS     R4,R0
    143              if(tmp & UART_S1_RDRF_MASK)
   \   000000DC   0x0020             MOVS     R0,R4
   \   000000DE   0x0680             LSLS     R0,R0,#+26
   \   000000E0   0xD505             BPL      ??uart01_isr_6
    144                pCallbackUART0_UART1 (UART1_CALLBACK, UART_RX_CALLBACK, tmp);
   \   000000E2   0x0022             MOVS     R2,R4
   \   000000E4   0x2102             MOVS     R1,#+2
   \   000000E6   0x2002             MOVS     R0,#+2
   \   000000E8   0x....             LDR      R3,??DataTable7_3
   \   000000EA   0x681B             LDR      R3,[R3, #+0]
   \   000000EC   0x4798             BLX      R3
    145          
    146              if(tmp & (UART_S1_TC_MASK|UART_S1_TDRE_MASK))
   \                     ??uart01_isr_6: (+1)
   \   000000EE   0x0020             MOVS     R0,R4
   \   000000F0   0x21C0             MOVS     R1,#+192
   \   000000F2   0x4208             TST      R0,R1
   \   000000F4   0xD005             BEQ      ??uart01_isr_7
    147                pCallbackUART0_UART1 (UART1_CALLBACK, UART_TX_CALLBACK, tmp);
   \   000000F6   0x0022             MOVS     R2,R4
   \   000000F8   0x2101             MOVS     R1,#+1
   \   000000FA   0x2002             MOVS     R0,#+2
   \   000000FC   0x....             LDR      R3,??DataTable7_3
   \   000000FE   0x681B             LDR      R3,[R3, #+0]
   \   00000100   0x4798             BLX      R3
    148          
    149              tmp = UART1_S1 & (UART1_C3 & (UART_C3_PEIE_MASK|UART_C3_FEIE_MASK|        \
    150                                            UART_C3_NEIE_MASK|UART_C3_ORIE_MASK));
   \                     ??uart01_isr_7: (+1)
   \   00000102   0x....             LDR      R0,??DataTable7_8  ;; 0x4006b004
   \   00000104   0x7800             LDRB     R0,[R0, #+0]
   \   00000106   0xB2C0             UXTB     R0,R0
   \   00000108   0x....             LDR      R1,??DataTable7_9  ;; 0x4006b006
   \   0000010A   0x7809             LDRB     R1,[R1, #+0]
   \   0000010C   0xB2C9             UXTB     R1,R1
   \   0000010E   0x4001             ANDS     R1,R1,R0
   \   00000110   0x0708             LSLS     R0,R1,#+28       ;; ZeroExtS R0,R1,#+28,#+28
   \   00000112   0x0F00             LSRS     R0,R0,#+28
   \   00000114   0x0004             MOVS     R4,R0
    151              if(tmp != 0)
   \   00000116   0x2C00             CMP      R4,#+0
   \   00000118   0xD005             BEQ      ??uart01_isr_4
    152                pCallbackUART0_UART1 (UART1_CALLBACK, UART_ER_CALLBACK, tmp);
   \   0000011A   0x0022             MOVS     R2,R4
   \   0000011C   0x2104             MOVS     R1,#+4
   \   0000011E   0x2002             MOVS     R0,#+2
   \   00000120   0x....             LDR      R3,??DataTable7_3
   \   00000122   0x681B             LDR      R3,[R3, #+0]
   \   00000124   0x4798             BLX      R3
    153            }
    154          }
   \                     ??uart01_isr_4: (+1)
   \   00000126   0xBD10             POP      {R4,PC}          ;; return
    155          
    156          #if defined(__ICCARM__)
    157            #pragma diag_suppress=Pa082
    158          #endif

   \                                 In section .text, align 2, keep-with-next
    159          weak void uart23_isr (void)
    160          {
   \                     uart23_isr: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
    161            register int32 tmp;
    162          
    163            /* process UART2 interrupts                                                 */
    164            if (SIM_SCGC4 & SIM_SCGC4_UART2_MASK)
   \   00000002   0x....             LDR      R0,??DataTable7  ;; 0x4003f034
   \   00000004   0x6800             LDR      R0,[R0, #+0]
   \   00000006   0x04C0             LSLS     R0,R0,#+19
   \   00000008   0xD544             BPL      ??uart23_isr_0
    165            {
    166              tmp = UART2_S2 & (UART2_BDH & UART_BDH_RXEDGIE_MASK);
   \   0000000A   0x....             LDR      R0,??DataTable7_10  ;; 0x4006c005
   \   0000000C   0x7800             LDRB     R0,[R0, #+0]
   \   0000000E   0xB2C0             UXTB     R0,R0
   \   00000010   0x....             LDR      R1,??DataTable7_11  ;; 0x4006c000
   \   00000012   0x7809             LDRB     R1,[R1, #+0]
   \   00000014   0xB2C9             UXTB     R1,R1
   \   00000016   0x4001             ANDS     R1,R1,R0
   \   00000018   0x2040             MOVS     R0,#+64
   \   0000001A   0x4001             ANDS     R1,R1,R0
   \   0000001C   0x000C             MOVS     R4,R1
    167              if(tmp != 0)
   \   0000001E   0x2C00             CMP      R4,#+0
   \   00000020   0xD009             BEQ      ??uart23_isr_1
    168              {
    169                UART2_S2 = UART2_S2;  /* clear RXEDGIF interrupt flag                   */
   \   00000022   0x....             LDR      R0,??DataTable7_10  ;; 0x4006c005
   \   00000024   0x7800             LDRB     R0,[R0, #+0]
   \   00000026   0x....             LDR      R1,??DataTable7_10  ;; 0x4006c005
   \   00000028   0x7008             STRB     R0,[R1, #+0]
    170                pCallbackUART2_UART3 (UART2_CALLBACK, UART_EDG_CALLBACK, tmp);
   \   0000002A   0x0022             MOVS     R2,R4
   \   0000002C   0x2108             MOVS     R1,#+8
   \   0000002E   0x2004             MOVS     R0,#+4
   \   00000030   0x....             LDR      R3,??DataTable7_12
   \   00000032   0x681B             LDR      R3,[R3, #+0]
   \   00000034   0x4798             BLX      R3
    171              }
    172          
    173              tmp = UART2_S1 & (UART2_C2 & (UART_C2_RIE_MASK|UART_C2_TCIE_MASK|         \
    174                                            UART_C2_TIE_MASK));
   \                     ??uart23_isr_1: (+1)
   \   00000036   0x....             LDR      R0,??DataTable7_13  ;; 0x4006c004
   \   00000038   0x7800             LDRB     R0,[R0, #+0]
   \   0000003A   0xB2C0             UXTB     R0,R0
   \   0000003C   0x....             LDR      R1,??DataTable7_14  ;; 0x4006c003
   \   0000003E   0x7809             LDRB     R1,[R1, #+0]
   \   00000040   0xB2C9             UXTB     R1,R1
   \   00000042   0x4001             ANDS     R1,R1,R0
   \   00000044   0x20E0             MOVS     R0,#+224
   \   00000046   0x4008             ANDS     R0,R0,R1
   \   00000048   0x0004             MOVS     R4,R0
    175              if(tmp & UART_S1_RDRF_MASK)
   \   0000004A   0x0020             MOVS     R0,R4
   \   0000004C   0x0680             LSLS     R0,R0,#+26
   \   0000004E   0xD505             BPL      ??uart23_isr_2
    176                pCallbackUART2_UART3 (UART2_CALLBACK, UART_RX_CALLBACK, tmp);
   \   00000050   0x0022             MOVS     R2,R4
   \   00000052   0x2102             MOVS     R1,#+2
   \   00000054   0x2004             MOVS     R0,#+4
   \   00000056   0x....             LDR      R3,??DataTable7_12
   \   00000058   0x681B             LDR      R3,[R3, #+0]
   \   0000005A   0x4798             BLX      R3
    177          
    178              if(tmp & (UART_S1_TC_MASK|UART_S1_TDRE_MASK))
   \                     ??uart23_isr_2: (+1)
   \   0000005C   0x0020             MOVS     R0,R4
   \   0000005E   0x21C0             MOVS     R1,#+192
   \   00000060   0x4208             TST      R0,R1
   \   00000062   0xD005             BEQ      ??uart23_isr_3
    179                pCallbackUART2_UART3 (UART2_CALLBACK, UART_TX_CALLBACK, tmp);
   \   00000064   0x0022             MOVS     R2,R4
   \   00000066   0x2101             MOVS     R1,#+1
   \   00000068   0x2004             MOVS     R0,#+4
   \   0000006A   0x....             LDR      R3,??DataTable7_12
   \   0000006C   0x681B             LDR      R3,[R3, #+0]
   \   0000006E   0x4798             BLX      R3
    180          
    181              tmp = UART2_S1 & (UART2_C3 & (UART_C3_PEIE_MASK|UART_C3_FEIE_MASK|        \
    182                                            UART_C3_NEIE_MASK|UART_C3_ORIE_MASK));
   \                     ??uart23_isr_3: (+1)
   \   00000070   0x....             LDR      R0,??DataTable7_13  ;; 0x4006c004
   \   00000072   0x7800             LDRB     R0,[R0, #+0]
   \   00000074   0xB2C0             UXTB     R0,R0
   \   00000076   0x....             LDR      R1,??DataTable7_15  ;; 0x4006c006
   \   00000078   0x7809             LDRB     R1,[R1, #+0]
   \   0000007A   0xB2C9             UXTB     R1,R1
   \   0000007C   0x4001             ANDS     R1,R1,R0
   \   0000007E   0x0708             LSLS     R0,R1,#+28       ;; ZeroExtS R0,R1,#+28,#+28
   \   00000080   0x0F00             LSRS     R0,R0,#+28
   \   00000082   0x0004             MOVS     R4,R0
    183              if(tmp != 0)
   \   00000084   0x2C00             CMP      R4,#+0
   \   00000086   0xD005             BEQ      ??uart23_isr_0
    184                pCallbackUART2_UART3 (UART2_CALLBACK, UART_ER_CALLBACK, tmp);
   \   00000088   0x0022             MOVS     R2,R4
   \   0000008A   0x2104             MOVS     R1,#+4
   \   0000008C   0x2004             MOVS     R0,#+4
   \   0000008E   0x....             LDR      R3,??DataTable7_12
   \   00000090   0x681B             LDR      R3,[R3, #+0]
   \   00000092   0x4798             BLX      R3
    185            }
    186          
    187            /* process UART3 interrupts                                                 */
    188            if (SIM_SCGC4 & SIM_SCGC4_UART3_MASK)
   \                     ??uart23_isr_0: (+1)
   \   00000094   0x....             LDR      R0,??DataTable7  ;; 0x4003f034
   \   00000096   0x6800             LDR      R0,[R0, #+0]
   \   00000098   0x0480             LSLS     R0,R0,#+18
   \   0000009A   0xD544             BPL      ??uart23_isr_4
    189            {
    190              tmp = UART3_S2 & (UART3_BDH & UART_BDH_RXEDGIE_MASK);
   \   0000009C   0x....             LDR      R0,??DataTable7_16  ;; 0x4006d005
   \   0000009E   0x7800             LDRB     R0,[R0, #+0]
   \   000000A0   0xB2C0             UXTB     R0,R0
   \   000000A2   0x....             LDR      R1,??DataTable7_17  ;; 0x4006d000
   \   000000A4   0x7809             LDRB     R1,[R1, #+0]
   \   000000A6   0xB2C9             UXTB     R1,R1
   \   000000A8   0x4001             ANDS     R1,R1,R0
   \   000000AA   0x2040             MOVS     R0,#+64
   \   000000AC   0x4001             ANDS     R1,R1,R0
   \   000000AE   0x000C             MOVS     R4,R1
    191              if(tmp != 0)
   \   000000B0   0x2C00             CMP      R4,#+0
   \   000000B2   0xD009             BEQ      ??uart23_isr_5
    192              {
    193                UART3_S2 = UART3_S2;  /* clear RXEDGIF interrupt flag                   */
   \   000000B4   0x....             LDR      R0,??DataTable7_16  ;; 0x4006d005
   \   000000B6   0x7800             LDRB     R0,[R0, #+0]
   \   000000B8   0x....             LDR      R1,??DataTable7_16  ;; 0x4006d005
   \   000000BA   0x7008             STRB     R0,[R1, #+0]
    194                pCallbackUART2_UART3 (UART3_CALLBACK, UART_EDG_CALLBACK, tmp);
   \   000000BC   0x0022             MOVS     R2,R4
   \   000000BE   0x2108             MOVS     R1,#+8
   \   000000C0   0x2008             MOVS     R0,#+8
   \   000000C2   0x....             LDR      R3,??DataTable7_12
   \   000000C4   0x681B             LDR      R3,[R3, #+0]
   \   000000C6   0x4798             BLX      R3
    195              }
    196          
    197              tmp = UART3_S1 & (UART3_C2 & (UART_C2_RIE_MASK|UART_C2_TCIE_MASK|         \
    198                                            UART_C2_TIE_MASK));
   \                     ??uart23_isr_5: (+1)
   \   000000C8   0x....             LDR      R0,??DataTable7_18  ;; 0x4006d004
   \   000000CA   0x7800             LDRB     R0,[R0, #+0]
   \   000000CC   0xB2C0             UXTB     R0,R0
   \   000000CE   0x....             LDR      R1,??DataTable7_19  ;; 0x4006d003
   \   000000D0   0x7809             LDRB     R1,[R1, #+0]
   \   000000D2   0xB2C9             UXTB     R1,R1
   \   000000D4   0x4001             ANDS     R1,R1,R0
   \   000000D6   0x20E0             MOVS     R0,#+224
   \   000000D8   0x4008             ANDS     R0,R0,R1
   \   000000DA   0x0004             MOVS     R4,R0
    199              if(tmp & UART_S1_RDRF_MASK)
   \   000000DC   0x0020             MOVS     R0,R4
   \   000000DE   0x0680             LSLS     R0,R0,#+26
   \   000000E0   0xD505             BPL      ??uart23_isr_6
    200                pCallbackUART2_UART3 (UART3_CALLBACK, UART_RX_CALLBACK, tmp);
   \   000000E2   0x0022             MOVS     R2,R4
   \   000000E4   0x2102             MOVS     R1,#+2
   \   000000E6   0x2008             MOVS     R0,#+8
   \   000000E8   0x....             LDR      R3,??DataTable7_12
   \   000000EA   0x681B             LDR      R3,[R3, #+0]
   \   000000EC   0x4798             BLX      R3
    201          
    202              if(tmp & (UART_S1_TC_MASK|UART_S1_TDRE_MASK))
   \                     ??uart23_isr_6: (+1)
   \   000000EE   0x0020             MOVS     R0,R4
   \   000000F0   0x21C0             MOVS     R1,#+192
   \   000000F2   0x4208             TST      R0,R1
   \   000000F4   0xD005             BEQ      ??uart23_isr_7
    203                pCallbackUART2_UART3 (UART3_CALLBACK ,UART_TX_CALLBACK, tmp);
   \   000000F6   0x0022             MOVS     R2,R4
   \   000000F8   0x2101             MOVS     R1,#+1
   \   000000FA   0x2008             MOVS     R0,#+8
   \   000000FC   0x....             LDR      R3,??DataTable7_12
   \   000000FE   0x681B             LDR      R3,[R3, #+0]
   \   00000100   0x4798             BLX      R3
    204          
    205              tmp = UART3_S1 & (UART3_C3 & (UART_C3_PEIE_MASK|UART_C3_FEIE_MASK|        \
    206                                            UART_C3_NEIE_MASK|UART_C3_ORIE_MASK));
   \                     ??uart23_isr_7: (+1)
   \   00000102   0x....             LDR      R0,??DataTable7_18  ;; 0x4006d004
   \   00000104   0x7800             LDRB     R0,[R0, #+0]
   \   00000106   0xB2C0             UXTB     R0,R0
   \   00000108   0x....             LDR      R1,??DataTable7_20  ;; 0x4006d006
   \   0000010A   0x7809             LDRB     R1,[R1, #+0]
   \   0000010C   0xB2C9             UXTB     R1,R1
   \   0000010E   0x4001             ANDS     R1,R1,R0
   \   00000110   0x0708             LSLS     R0,R1,#+28       ;; ZeroExtS R0,R1,#+28,#+28
   \   00000112   0x0F00             LSRS     R0,R0,#+28
   \   00000114   0x0004             MOVS     R4,R0
    207              if(tmp != 0)
   \   00000116   0x2C00             CMP      R4,#+0
   \   00000118   0xD005             BEQ      ??uart23_isr_4
    208                pCallbackUART2_UART3 (UART3_CALLBACK, UART_ER_CALLBACK, tmp);
   \   0000011A   0x0022             MOVS     R2,R4
   \   0000011C   0x2104             MOVS     R1,#+4
   \   0000011E   0x2008             MOVS     R0,#+8
   \   00000120   0x....             LDR      R3,??DataTable7_12
   \   00000122   0x681B             LDR      R3,[R3, #+0]
   \   00000124   0x4798             BLX      R3
    209            }
    210          }
   \                     ??uart23_isr_4: (+1)
   \   00000126   0xBD10             POP      {R4,PC}          ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5:
   \   00000000   0x........         DC32     pCallbackUART0_UART1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_1:
   \   00000000   0xE000E280         DC32     0xe000e280

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_2:
   \   00000000   0xE000E100         DC32     0xe000e100

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_3:
   \   00000000   0xE000E410         DC32     0xe000e410

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_4:
   \   00000000   0x........         DC32     pCallbackUART2_UART3

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_5:
   \   00000000   0x4006A000         DC32     0x4006a000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_6:
   \   00000000   0x4006A001         DC32     0x4006a001

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_7:
   \   00000000   0x4006A002         DC32     0x4006a002

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_8:
   \   00000000   0x4006A005         DC32     0x4006a005

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_9:
   \   00000000   0x4006A006         DC32     0x4006a006

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_10:
   \   00000000   0x4006A008         DC32     0x4006a008

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_11:
   \   00000000   0x4006A009         DC32     0x4006a009

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_12:
   \   00000000   0x4006A00A         DC32     0x4006a00a

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_13:
   \   00000000   0x4006A00B         DC32     0x4006a00b

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_14:
   \   00000000   0x4006B000         DC32     0x4006b000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_15:
   \   00000000   0x4006B001         DC32     0x4006b001

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_16:
   \   00000000   0x4006B002         DC32     0x4006b002

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_17:
   \   00000000   0x4006B005         DC32     0x4006b005

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_18:
   \   00000000   0x4006B006         DC32     0x4006b006

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_19:
   \   00000000   0x4006B008         DC32     0x4006b008

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6:
   \   00000000   0xE000E414         DC32     0xe000e414

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_1:
   \   00000000   0x4006A003         DC32     0x4006a003

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_2:
   \   00000000   0x4006B003         DC32     0x4006b003

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_3:
   \   00000000   0x4006B009         DC32     0x4006b009

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_4:
   \   00000000   0x4006B00A         DC32     0x4006b00a

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_5:
   \   00000000   0x4006B00B         DC32     0x4006b00b

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_6:
   \   00000000   0x4006C003         DC32     0x4006c003

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_7:
   \   00000000   0x4006C000         DC32     0x4006c000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_8:
   \   00000000   0x4006C001         DC32     0x4006c001

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_9:
   \   00000000   0x4006C002         DC32     0x4006c002

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_10:
   \   00000000   0x4006C005         DC32     0x4006c005

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_11:
   \   00000000   0x4006C006         DC32     0x4006c006

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_12:
   \   00000000   0x4006C008         DC32     0x4006c008

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_13:
   \   00000000   0x4006C009         DC32     0x4006c009

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_14:
   \   00000000   0x4006C00A         DC32     0x4006c00a

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_15:
   \   00000000   0x4006C00B         DC32     0x4006c00b

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_16:
   \   00000000   0x4006D003         DC32     0x4006d003

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_17:
   \   00000000   0x4006D000         DC32     0x4006d000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_18:
   \   00000000   0x4006D001         DC32     0x4006d001

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_19:
   \   00000000   0x4006D002         DC32     0x4006d002

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_20:
   \   00000000   0x4006D005         DC32     0x4006d005

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_21:
   \   00000000   0x4006D006         DC32     0x4006d006

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_22:
   \   00000000   0x4006D008         DC32     0x4006d008

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_23:
   \   00000000   0x4006D009         DC32     0x4006d009

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_24:
   \   00000000   0x4006D00A         DC32     0x4006d00a

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_25:
   \   00000000   0x4006D00B         DC32     0x4006d00b

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7:
   \   00000000   0x4003F034         DC32     0x4003f034

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_1:
   \   00000000   0x4006A005         DC32     0x4006a005

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_2:
   \   00000000   0x4006A000         DC32     0x4006a000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_3:
   \   00000000   0x........         DC32     pCallbackUART0_UART1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_4:
   \   00000000   0x4006A004         DC32     0x4006a004

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_5:
   \   00000000   0x4006A006         DC32     0x4006a006

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_6:
   \   00000000   0x4006B005         DC32     0x4006b005

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_7:
   \   00000000   0x4006B000         DC32     0x4006b000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_8:
   \   00000000   0x4006B004         DC32     0x4006b004

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_9:
   \   00000000   0x4006B006         DC32     0x4006b006

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_10:
   \   00000000   0x4006C005         DC32     0x4006c005

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_11:
   \   00000000   0x4006C000         DC32     0x4006c000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_12:
   \   00000000   0x........         DC32     pCallbackUART2_UART3

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_13:
   \   00000000   0x4006C004         DC32     0x4006c004

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_14:
   \   00000000   0x4006C003         DC32     0x4006c003

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_15:
   \   00000000   0x4006C006         DC32     0x4006c006

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_16:
   \   00000000   0x4006D005         DC32     0x4006d005

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_17:
   \   00000000   0x4006D000         DC32     0x4006d000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_18:
   \   00000000   0x4006D004         DC32     0x4006d004

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_19:
   \   00000000   0x4006D003         DC32     0x4006d003

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_20:
   \   00000000   0x4006D006         DC32     0x4006d006
    211          /******************************************************************************
    212           * End of module                                                              *
    213           ******************************************************************************/

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      12   UART0_Init
      12   UART1_Init
      12   UART2_Init
      12   UART3_Init
       4   UART_InstallCallbackUART0_UART1
       4   UART_InstallCallbackUART2_UART3
       8   uart01_isr
         8   -- Indirect call
       8   uart23_isr
         8   -- Indirect call


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable5
       4  ??DataTable5_1
       4  ??DataTable5_10
       4  ??DataTable5_11
       4  ??DataTable5_12
       4  ??DataTable5_13
       4  ??DataTable5_14
       4  ??DataTable5_15
       4  ??DataTable5_16
       4  ??DataTable5_17
       4  ??DataTable5_18
       4  ??DataTable5_19
       4  ??DataTable5_2
       4  ??DataTable5_3
       4  ??DataTable5_4
       4  ??DataTable5_5
       4  ??DataTable5_6
       4  ??DataTable5_7
       4  ??DataTable5_8
       4  ??DataTable5_9
       4  ??DataTable6
       4  ??DataTable6_1
       4  ??DataTable6_10
       4  ??DataTable6_11
       4  ??DataTable6_12
       4  ??DataTable6_13
       4  ??DataTable6_14
       4  ??DataTable6_15
       4  ??DataTable6_16
       4  ??DataTable6_17
       4  ??DataTable6_18
       4  ??DataTable6_19
       4  ??DataTable6_2
       4  ??DataTable6_20
       4  ??DataTable6_21
       4  ??DataTable6_22
       4  ??DataTable6_23
       4  ??DataTable6_24
       4  ??DataTable6_25
       4  ??DataTable6_3
       4  ??DataTable6_4
       4  ??DataTable6_5
       4  ??DataTable6_6
       4  ??DataTable6_7
       4  ??DataTable6_8
       4  ??DataTable6_9
       4  ??DataTable7
       4  ??DataTable7_1
       4  ??DataTable7_10
       4  ??DataTable7_11
       4  ??DataTable7_12
       4  ??DataTable7_13
       4  ??DataTable7_14
       4  ??DataTable7_15
       4  ??DataTable7_16
       4  ??DataTable7_17
       4  ??DataTable7_18
       4  ??DataTable7_19
       4  ??DataTable7_2
       4  ??DataTable7_20
       4  ??DataTable7_3
       4  ??DataTable7_4
       4  ??DataTable7_5
       4  ??DataTable7_6
       4  ??DataTable7_7
       4  ??DataTable7_8
       4  ??DataTable7_9
      98  UART0_Init
      98  UART1_Init
      98  UART2_Init
      98  UART3_Init
      56  UART_InstallCallbackUART0_UART1
      56  UART_InstallCallbackUART2_UART3
       4  pCallbackUART0_UART1
       4  pCallbackUART2_UART3
     296  uart01_isr
     296  uart23_isr

 
     8 bytes in section .bss
 1 364 bytes in section .text
 
 1 364 bytes of CODE memory
     8 bytes of DATA memory

Errors: none
Warnings: none
