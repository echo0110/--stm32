###############################################################################
#
# IAR ANSI C/C++ Compiler V7.40.3.8902/W32 for ARM        21/Mar/2017  20:22:06
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        C:\Freescale\KM128SWDRV_R4_1_6\src\projects\uart_test\uart_test.c
#    Command line =  
#        C:\Freescale\KM128SWDRV_R4_1_6\src\projects\uart_test\uart_test.c -D
#        NDEBUG -lCN
#        C:\Freescale\KM128SWDRV_R4_1_6\build\iar_7_40\projects\uart_test\Release\List\
#        -o
#        C:\Freescale\KM128SWDRV_R4_1_6\build\iar_7_40\projects\uart_test\Release\Obj\
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M0+ --no_mem_idioms -e --fpu=None --dlib_config
#        D:\IAR7.4anzhuang\arm\INC\c\DLib_Config_Normal.h -I
#        C:\Freescale\KM128SWDRV_R4_1_6\build\iar_7_40\projects\uart_test\..\..\..\..\src\common\
#        -I
#        C:\Freescale\KM128SWDRV_R4_1_6\build\iar_7_40\projects\uart_test\..\..\..\..\src\drivers\
#        -I
#        C:\Freescale\KM128SWDRV_R4_1_6\build\iar_7_40\projects\uart_test\..\..\..\..\src\freemaster\
#        -I
#        C:\Freescale\KM128SWDRV_R4_1_6\build\iar_7_40\projects\uart_test\..\..\..\..\src\projects\uart_test\
#        -I
#        C:\Freescale\KM128SWDRV_R4_1_6\build\iar_7_40\projects\uart_test\..\..\..\..\src\toolchain\iar\
#        -On --require_prototypes
#    List file    =  
#        C:\Freescale\KM128SWDRV_R4_1_6\build\iar_7_40\projects\uart_test\Release\List\uart_test.lst
#    Object file  =  
#        C:\Freescale\KM128SWDRV_R4_1_6\build\iar_7_40\projects\uart_test\Release\Obj\uart_test.o
#
###############################################################################

C:\Freescale\KM128SWDRV_R4_1_6\src\projects\uart_test\uart_test.c
      1          /******************************************************************************
      2           * (c) Copyright 2010-2015, Freescale Semiconductor Inc.
      3           * ALL RIGHTS RESERVED.
      4           ******************************************************************************
      5           * uart_test.c
      6           ******************************************************************************/
      7          #include "drivers.h"
      8          

   \                                 In section .text, align 4, keep-with-next
      9          void main (void)
     10          {
   \                     main: (+1)
   \   00000000   0xB530             PUSH     {R4,R5,LR}
   \   00000002   0xB08B             SUB      SP,SP,#+44
     11           char c;
     12           uint8 i=1;
   \   00000004   0x2401             MOVS     R4,#+1
     13          
     14            SIM_Init  (SIM_MODULE_ALL_PERIPH_ON_CONFIG);
   \   00000006   0xA801             ADD      R0,SP,#+4
   \   00000008   0x494A             LDR      R1,??main_0
   \   0000000A   0x2228             MOVS     R2,#+40
   \   0000000C   0x.... 0x....      BL       __aeabi_memcpy4
   \   00000010   0x9801             LDR      R0,[SP, #+4]
   \   00000012   0x4949             LDR      R1,??main_0+0x4  ;; 0x4003e000
   \   00000014   0x6008             STR      R0,[R1, #+0]
   \   00000016   0xA801             ADD      R0,SP,#+4
   \   00000018   0x4948             LDR      R1,??main_0+0x8
   \   0000001A   0x2228             MOVS     R2,#+40
   \   0000001C   0x.... 0x....      BL       __aeabi_memcpy4
   \   00000020   0x9802             LDR      R0,[SP, #+8]
   \   00000022   0x4947             LDR      R1,??main_0+0xC  ;; 0x4003e004
   \   00000024   0x6008             STR      R0,[R1, #+0]
   \   00000026   0xA801             ADD      R0,SP,#+4
   \   00000028   0x4946             LDR      R1,??main_0+0x10
   \   0000002A   0x2228             MOVS     R2,#+40
   \   0000002C   0x.... 0x....      BL       __aeabi_memcpy4
   \   00000030   0x9803             LDR      R0,[SP, #+12]
   \   00000032   0x4945             LDR      R1,??main_0+0x14  ;; 0x4003f004
   \   00000034   0x6008             STR      R0,[R1, #+0]
   \   00000036   0xA801             ADD      R0,SP,#+4
   \   00000038   0x4944             LDR      R1,??main_0+0x18
   \   0000003A   0x2228             MOVS     R2,#+40
   \   0000003C   0x.... 0x....      BL       __aeabi_memcpy4
   \   00000040   0x9804             LDR      R0,[SP, #+16]
   \   00000042   0x4943             LDR      R1,??main_0+0x1C  ;; 0x78000020
   \   00000044   0x4301             ORRS     R1,R1,R0
   \   00000046   0x4843             LDR      R0,??main_0+0x20  ;; 0x4003f034
   \   00000048   0x6001             STR      R1,[R0, #+0]
   \   0000004A   0xA801             ADD      R0,SP,#+4
   \   0000004C   0x4942             LDR      R1,??main_0+0x24
   \   0000004E   0x2228             MOVS     R2,#+40
   \   00000050   0x.... 0x....      BL       __aeabi_memcpy4
   \   00000054   0x9805             LDR      R0,[SP, #+20]
   \   00000056   0x4941             LDR      R1,??main_0+0x28  ;; 0x4003f038
   \   00000058   0x6008             STR      R0,[R1, #+0]
   \   0000005A   0xA801             ADD      R0,SP,#+4
   \   0000005C   0x4940             LDR      R1,??main_0+0x2C
   \   0000005E   0x2228             MOVS     R2,#+40
   \   00000060   0x.... 0x....      BL       __aeabi_memcpy4
   \   00000064   0x9806             LDR      R0,[SP, #+24]
   \   00000066   0x2180             MOVS     R1,#+128
   \   00000068   0x0609             LSLS     R1,R1,#+24       ;; #-2147483648
   \   0000006A   0x4301             ORRS     R1,R1,R0
   \   0000006C   0x483D             LDR      R0,??main_0+0x30  ;; 0x4003f03c
   \   0000006E   0x6001             STR      R1,[R0, #+0]
   \   00000070   0xA801             ADD      R0,SP,#+4
   \   00000072   0x493D             LDR      R1,??main_0+0x34
   \   00000074   0x2228             MOVS     R2,#+40
   \   00000076   0x.... 0x....      BL       __aeabi_memcpy4
   \   0000007A   0x9807             LDR      R0,[SP, #+28]
   \   0000007C   0x493B             LDR      R1,??main_0+0x38  ;; 0x4003f040
   \   0000007E   0x6008             STR      R0,[R1, #+0]
   \   00000080   0xA801             ADD      R0,SP,#+4
   \   00000082   0x493B             LDR      R1,??main_0+0x3C
   \   00000084   0x2228             MOVS     R2,#+40
   \   00000086   0x.... 0x....      BL       __aeabi_memcpy4
   \   0000008A   0x9808             LDR      R0,[SP, #+32]
   \   0000008C   0x4939             LDR      R1,??main_0+0x40  ;; 0x4003f044
   \   0000008E   0x6008             STR      R0,[R1, #+0]
   \   00000090   0xA801             ADD      R0,SP,#+4
   \   00000092   0x4939             LDR      R1,??main_0+0x44
   \   00000094   0x2228             MOVS     R2,#+40
   \   00000096   0x.... 0x....      BL       __aeabi_memcpy4
   \   0000009A   0x9809             LDR      R0,[SP, #+36]
   \   0000009C   0x4937             LDR      R1,??main_0+0x48  ;; 0x4003f04c
   \   0000009E   0x6008             STR      R0,[R1, #+0]
   \   000000A0   0xA801             ADD      R0,SP,#+4
   \   000000A2   0x4937             LDR      R1,??main_0+0x4C
   \   000000A4   0x2228             MOVS     R2,#+40
   \   000000A6   0x.... 0x....      BL       __aeabi_memcpy4
   \   000000AA   0x980A             LDR      R0,[SP, #+40]
   \   000000AC   0x4935             LDR      R1,??main_0+0x50  ;; 0x4003f06c
   \   000000AE   0x6008             STR      R0,[R1, #+0]
     15          
     16            /* route core clock to PTF7                                                 */
     17            SIM_SelClkout (CLKOUT_SRC2);
   \   000000B0   0x2040             MOVS     R0,#+64
   \   000000B2   0x4935             LDR      R1,??main_0+0x54  ;; 0x5293f004
   \   000000B4   0x6008             STR      R0,[R1, #+0]
     18            PORT_Init (PORTF,PORT_MODULE_ALT3_MODE,PIN7);
   \   000000B6   0x2280             MOVS     R2,#+128
   \   000000B8   0x4834             LDR      R0,??main_0+0x58
   \   000000BA   0xC803             LDM      R0,{R0,R1}
   \   000000BC   0x.... 0x....      BL       PORTF_Init
     19          
     20            /* clock mode 1:1:1, 24MHz                                                  */
     21            SIM_SetClkMode (SYSCLK_MODE0);
   \   000000C0   0x2000             MOVS     R0,#+0
   \   000000C2   0x4933             LDR      R1,??main_0+0x5C  ;; 0x5d83f044
   \   000000C4   0x6008             STR      R0,[R1, #+0]
     22            SIM_SetClkDiv  (SYSCLK_DIV1);
   \   000000C6   0x2000             MOVS     R0,#+0
   \   000000C8   0x4932             LDR      R1,??main_0+0x60  ;; 0x5e1bf044
   \   000000CA   0x6008             STR      R0,[R1, #+0]
     23            FLL_Init(FLL_MODULE_FEE_24MHZ_CONFIG);
   \   000000CC   0x4832             LDR      R0,??main_0+0x64
   \   000000CE   0xC803             LDM      R0,{R0,R1}
   \   000000D0   0x.... 0x....      BL       FLL_Init
     24          
     25          //  /* UART1 init 9600bd                                                        */
     26          //  PORT_Init (PORTF, PORT_MODULE_ALT4_MODE, PIN3|PIN4);
     27          //  UART_Init (UART0, UART_MODULE_POLLMODE_CONFIG(9600,24e6));
     28            
     29             //  PTD4初始化用于拉高485 
     30              PORT_Init (PORTD, PORT_MODULE_LED_MODE, PIN4);
   \   000000D4   0x2210             MOVS     R2,#+16
   \   000000D6   0x4831             LDR      R0,??main_0+0x68
   \   000000D8   0xC803             LDM      R0,{R0,R1}
   \   000000DA   0x.... 0x....      BL       PORTD_Init
     31              GPIO_Init (GPIOD, GPIO_OUT_LOGIC0_MODE, PIN4);
   \   000000DE   0x4830             LDR      R0,??main_0+0x6C
   \   000000E0   0x6800             LDR      R0,[R0, #+0]
   \   000000E2   0x9000             STR      R0,[SP, #+0]
   \   000000E4   0x482F             LDR      R0,??main_0+0x70  ;; 0x400ff003
   \   000000E6   0x7800             LDRB     R0,[R0, #+0]
   \   000000E8   0x21EF             MOVS     R1,#+239
   \   000000EA   0x4001             ANDS     R1,R1,R0
   \   000000EC   0x4668             MOV      R0,SP
   \   000000EE   0x7840             LDRB     R0,[R0, #+1]
   \   000000F0   0x2210             MOVS     R2,#+16
   \   000000F2   0x4010             ANDS     R0,R0,R2
   \   000000F4   0x4308             ORRS     R0,R0,R1
   \   000000F6   0x492B             LDR      R1,??main_0+0x70  ;; 0x400ff003
   \   000000F8   0x7008             STRB     R0,[R1, #+0]
   \   000000FA   0x482B             LDR      R0,??main_0+0x74
   \   000000FC   0x6800             LDR      R0,[R0, #+0]
   \   000000FE   0x9000             STR      R0,[SP, #+0]
   \   00000100   0x482A             LDR      R0,??main_0+0x78  ;; 0x400ff017
   \   00000102   0x7800             LDRB     R0,[R0, #+0]
   \   00000104   0x21EF             MOVS     R1,#+239
   \   00000106   0x4001             ANDS     R1,R1,R0
   \   00000108   0x4668             MOV      R0,SP
   \   0000010A   0x7800             LDRB     R0,[R0, #+0]
   \   0000010C   0x2210             MOVS     R2,#+16
   \   0000010E   0x4010             ANDS     R0,R0,R2
   \   00000110   0x4308             ORRS     R0,R0,R1
   \   00000112   0x4926             LDR      R1,??main_0+0x78  ;; 0x400ff017
   \   00000114   0x7008             STRB     R0,[R1, #+0]
     32              GPIO_Set(GPIOD,PIN4);//拉高485的那个引脚
   \   00000116   0x4823             LDR      R0,??main_0+0x70  ;; 0x400ff003
   \   00000118   0x7800             LDRB     R0,[R0, #+0]
   \   0000011A   0x2110             MOVS     R1,#+16
   \   0000011C   0x4301             ORRS     R1,R1,R0
   \   0000011E   0x4821             LDR      R0,??main_0+0x70  ;; 0x400ff003
   \   00000120   0x7001             STRB     R1,[R0, #+0]
     33          
     34           //UART_PutStr (UART1,"\n\rCharacters will be echoed on the screen:\n");
     35            // UART_PutChar(UART0,'y');
     36            while(1)
     37            {
     38           //  UART_PutStr (UART0,"\n\rCharacters will be echoed on the screen:\n");
     39              //UART_PutChar(UART0,1);
     40          //   UART_PutStr (UART0,"\n\rCharacters will be echoed on the screen:\n");
     41          //    /* read and echo character                                                */
     42                 while (!UART_RxFull(UART0));
   \                     ??main_1: (+1)
   \                     ??main_2: (+1)
   \   00000122   0x4823             LDR      R0,??main_0+0x7C  ;; 0x4006a004
   \   00000124   0x7800             LDRB     R0,[R0, #+0]
   \   00000126   0x0680             LSLS     R0,R0,#+26
   \   00000128   0xD5FB             BPL      ??main_2
     43                  c=UART_GetChar(UART0);
   \   0000012A   0x4822             LDR      R0,??main_0+0x80  ;; 0x4006a007
   \   0000012C   0x7800             LDRB     R0,[R0, #+0]
   \   0000012E   0x0005             MOVS     R5,R0
   \   00000130   0xE7F7             B        ??main_1
   \   00000132   0xBF00             Nop      
   \                     ??main_0:
   \   00000134   0x........         DC32     ?_0
   \   00000138   0x4003E000         DC32     0x4003e000
   \   0000013C   0x........         DC32     ?_1
   \   00000140   0x4003E004         DC32     0x4003e004
   \   00000144   0x........         DC32     ?_2
   \   00000148   0x4003F004         DC32     0x4003f004
   \   0000014C   0x........         DC32     ?_3
   \   00000150   0x78000020         DC32     0x78000020
   \   00000154   0x4003F034         DC32     0x4003f034
   \   00000158   0x........         DC32     ?_4
   \   0000015C   0x4003F038         DC32     0x4003f038
   \   00000160   0x........         DC32     ?_5
   \   00000164   0x4003F03C         DC32     0x4003f03c
   \   00000168   0x........         DC32     ?_6
   \   0000016C   0x4003F040         DC32     0x4003f040
   \   00000170   0x........         DC32     ?_7
   \   00000174   0x4003F044         DC32     0x4003f044
   \   00000178   0x........         DC32     ?_8
   \   0000017C   0x4003F04C         DC32     0x4003f04c
   \   00000180   0x........         DC32     ?_9
   \   00000184   0x4003F06C         DC32     0x4003f06c
   \   00000188   0x5293F004         DC32     0x5293f004
   \   0000018C   0x........         DC32     ?_10
   \   00000190   0x5D83F044         DC32     0x5d83f044
   \   00000194   0x5E1BF044         DC32     0x5e1bf044
   \   00000198   0x........         DC32     ?_11
   \   0000019C   0x........         DC32     ?_12
   \   000001A0   0x........         DC32     ?_13
   \   000001A4   0x400FF003         DC32     0x400ff003
   \   000001A8   0x........         DC32     ?_14
   \   000001AC   0x400FF017         DC32     0x400ff017
   \   000001B0   0x4006A004         DC32     0x4006a004
   \   000001B4   0x4006A007         DC32     0x4006a007
     44          //    while (!UART_TxIdle(UART0));
     45               // UART_PutChar(UART0,0x01);
     46          //     //UART_PutChar (UART0,'c');
     47          //     GPIO_Set(FGPIOF, PIN5);
     48             }
     49          }

   \                                 In section .rodata, align 4
   \                     ?_0:
   \   00000000   0x00000000         DC32 0, 0, 1, 7126482, 128679880, 1343318559, 3, 134217728, 0, 0
   \              0x00000000   
   \              0x00000001   
   \              0x006CBDD2   
   \              0x07AB7FC8   
   \              0x50116A1F   
   \              0x00000003   
   \              0x08000000   
   \              0x00000000   
   \              0x00000000   

   \                                 In section .rodata, align 4
   \                     ?_1:
   \   00000000   0x00000000         DC32 0, 0, 1, 7126482, 128679880, 1343318559, 3, 134217728, 0, 0
   \              0x00000000   
   \              0x00000001   
   \              0x006CBDD2   
   \              0x07AB7FC8   
   \              0x50116A1F   
   \              0x00000003   
   \              0x08000000   
   \              0x00000000   
   \              0x00000000   

   \                                 In section .rodata, align 4
   \                     ?_2:
   \   00000000   0x00000000         DC32 0, 0, 1, 7126482, 128679880, 1343318559, 3, 134217728, 0, 0
   \              0x00000000   
   \              0x00000001   
   \              0x006CBDD2   
   \              0x07AB7FC8   
   \              0x50116A1F   
   \              0x00000003   
   \              0x08000000   
   \              0x00000000   
   \              0x00000000   

   \                                 In section .rodata, align 4
   \                     ?_3:
   \   00000000   0x00000000         DC32 0, 0, 1, 7126482, 128679880, 1343318559, 3, 134217728, 0, 0
   \              0x00000000   
   \              0x00000001   
   \              0x006CBDD2   
   \              0x07AB7FC8   
   \              0x50116A1F   
   \              0x00000003   
   \              0x08000000   
   \              0x00000000   
   \              0x00000000   

   \                                 In section .rodata, align 4
   \                     ?_4:
   \   00000000   0x00000000         DC32 0, 0, 1, 7126482, 128679880, 1343318559, 3, 134217728, 0, 0
   \              0x00000000   
   \              0x00000001   
   \              0x006CBDD2   
   \              0x07AB7FC8   
   \              0x50116A1F   
   \              0x00000003   
   \              0x08000000   
   \              0x00000000   
   \              0x00000000   

   \                                 In section .rodata, align 4
   \                     ?_5:
   \   00000000   0x00000000         DC32 0, 0, 1, 7126482, 128679880, 1343318559, 3, 134217728, 0, 0
   \              0x00000000   
   \              0x00000001   
   \              0x006CBDD2   
   \              0x07AB7FC8   
   \              0x50116A1F   
   \              0x00000003   
   \              0x08000000   
   \              0x00000000   
   \              0x00000000   

   \                                 In section .rodata, align 4
   \                     ?_6:
   \   00000000   0x00000000         DC32 0, 0, 1, 7126482, 128679880, 1343318559, 3, 134217728, 0, 0
   \              0x00000000   
   \              0x00000001   
   \              0x006CBDD2   
   \              0x07AB7FC8   
   \              0x50116A1F   
   \              0x00000003   
   \              0x08000000   
   \              0x00000000   
   \              0x00000000   

   \                                 In section .rodata, align 4
   \                     ?_7:
   \   00000000   0x00000000         DC32 0, 0, 1, 7126482, 128679880, 1343318559, 3, 134217728, 0, 0
   \              0x00000000   
   \              0x00000001   
   \              0x006CBDD2   
   \              0x07AB7FC8   
   \              0x50116A1F   
   \              0x00000003   
   \              0x08000000   
   \              0x00000000   
   \              0x00000000   

   \                                 In section .rodata, align 4
   \                     ?_8:
   \   00000000   0x00000000         DC32 0, 0, 1, 7126482, 128679880, 1343318559, 3, 134217728, 0, 0
   \              0x00000000   
   \              0x00000001   
   \              0x006CBDD2   
   \              0x07AB7FC8   
   \              0x50116A1F   
   \              0x00000003   
   \              0x08000000   
   \              0x00000000   
   \              0x00000000   

   \                                 In section .rodata, align 4
   \                     ?_9:
   \   00000000   0x00000000         DC32 0, 0, 1, 7126482, 128679880, 1343318559, 3, 134217728, 0, 0
   \              0x00000000   
   \              0x00000001   
   \              0x006CBDD2   
   \              0x07AB7FC8   
   \              0x50116A1F   
   \              0x00000003   
   \              0x08000000   
   \              0x00000000   
   \              0x00000000   

   \                                 In section .rodata, align 4
   \                     ?_10:
   \   00000000   0x00000300         DC32 768, 0
   \              0x00000000   

   \                                 In section .rodata, align 4
   \                     ?_11:
   \   00000000   0x00 0x80          DC8 0, 128, 128, 8, 2, 1, 128, 0
   \              0x80 0x08    
   \              0x02 0x01    
   \              0x80 0x00    

   \                                 In section .rodata, align 4
   \                     ?_12:
   \   00000000   0x00000104         DC32 260, 0
   \              0x00000000   

   \                                 In section .rodata, align 4
   \                     ?_13:
   \   00000000   0xFF 0x00          DC8 255, 0, 0, 0
   \              0x00 0x00    

   \                                 In section .rodata, align 4
   \                     ?_14:
   \   00000000   0xFF 0x00          DC8 255, 0, 0, 0
   \              0x00 0x00    

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      56   main
        56   -> FLL_Init
        56   -> PORTD_Init
        56   -> PORTF_Init
        56   -> __aeabi_memcpy4


   Section sizes:

   Bytes  Function/Label
   -----  --------------
      40  ?_0
      40  ?_1
       8  ?_10
       8  ?_11
       8  ?_12
       4  ?_13
       4  ?_14
      40  ?_2
      40  ?_3
      40  ?_4
      40  ?_5
      40  ?_6
      40  ?_7
      40  ?_8
      40  ?_9
     440  main

 
 432 bytes in section .rodata
 440 bytes in section .text
 
 440 bytes of CODE  memory
 432 bytes of CONST memory

Errors: none
Warnings: 2
