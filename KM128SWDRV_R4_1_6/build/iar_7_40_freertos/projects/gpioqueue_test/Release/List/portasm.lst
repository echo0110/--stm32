###############################################################################
#                                                                             #
#     IAR Assembler V7.40.3.8902/W32 for ARM 07/Feb/2017  17:55:48            #
#     Copyright 1999-2015 IAR Systems AB.                                     #
#                                                                             #
#           Source file   =  C:\Freescale\KM128SWDRV_R4_1_6\src\freertos\iar\portasm.s#
#           List file     =  C:\Freescale\KM128SWDRV_R4_1_6\build\iar_7_40_freertos\projects\gpioqueue_test\Release\List\portasm.lst#
#           Object file   =  C:\Freescale\KM128SWDRV_R4_1_6\build\iar_7_40_freertos\projects\gpioqueue_test\Release\Obj\portasm.o#
#           Command line  =  C:\Freescale\KM128SWDRV_R4_1_6\src\freertos\iar\portasm.s #
#                            -OC:\Freescale\KM128SWDRV_R4_1_6\build\iar_7_40_freertos\projects\gpioqueue_test\Release\Obj\ #
#                            -s+ -M<> -w+ -r                                  #
#                            -LC:\Freescale\KM128SWDRV_R4_1_6\build\iar_7_40_freertos\projects\gpioqueue_test\Release\List\ #
#                            -t8 --cpu Cortex-M0+ --fpu None                  #
#                            -IC:\Freescale\KM128SWDRV_R4_1_6\build\iar_7_40_freertos\projects\gpioqueue_test\..\..\..\..\src\projects\gpioqueue_test\ #
#                                                                             #
###############################################################################

    1                           /*
    2                               FreeRTOS V8.2.1 - Copyright (C) 2015 Real
                                 Time Engineers Ltd.
    3                               All rights reserved
    4                           
    5                               VISIT http://www.FreeRTOS.org TO ENSURE
                                 YOU ARE USING THE LATEST VERSION.
    6                           
    7                               This file is part of the FreeRTOS
                                 distribution.
    8                           
    9                               FreeRTOS is free software; you can
                                 redistribute it and/or modify it under
   10                               the terms of the GNU General Public
                                 License (version 2) as published by the
   11                               Free Software Foundation >>!AND MODIFIED
                                 BY!<< the FreeRTOS exception.
   12                           
   13                               ******************************************
                                *********************************
   14                               >>!   NOTE: The modification to the GPL is
                                 included to allow you to     !<<
   15                               >>!   distribute a combined work that
                                 includes FreeRTOS without being   !<<
   16                               >>!   obliged to provide the source code
                                 for proprietary components     !<<
   17                               >>!   outside of the FreeRTOS kernel.     
                                                              !<<
   18                               ******************************************
                                *********************************
   19                           
   20                               FreeRTOS is distributed in the hope that
                                 it will be useful, but WITHOUT ANY
   21                               WARRANTY; without even the implied
                                 warranty of MERCHANTABILITY or FITNESS
   22                               FOR A PARTICULAR PURPOSE.  Full license
                                 text is available on the following
   23                               link: http://www.freertos.org/a00114.html
   24                           
   25                               ******************************************
                                *********************************
   26                                *                                        
                                                               *
   27                                *    FreeRTOS provides completely free
                                 yet professionally developed,    *
   28                                *    robust, strictly quality controlled,
                                 supported, and cross          *
   29                                *    platform software that is more than
                                 just the market leader, it     *
   30                                *    is the industry's de facto standard.
                                                               *
   31                                *                                        
                                                               *
   32                                *    Help yourself get started quickly
                                 while simultaneously helping     *
   33                                *    to support the FreeRTOS project by
                                 purchasing a FreeRTOS           *
   34                                *    tutorial book, reference manual, or
                                 both:                          *
   35                                *    http://www.FreeRTOS.org/Documentatio
                                n                              *
   36                                *                                        
                                                               *
   37                               ******************************************
                                *********************************
   38                           
   39                               http://www.FreeRTOS.org/FAQHelp.html -
                                 Having a problem?  Start by reading
   40                               the FAQ page "My application does not run,
                                 what could be wrong?".  Have you
   41                               defined configASSERT()?
   42                           
   43                               http://www.FreeRTOS.org/support - In
                                 return for receiving this top quality
   44                               embedded software for free we request you
                                 assist our global community by
   45                               participating in the support forum.
   46                           
   47                               http://www.FreeRTOS.org/training -
                                 Investing in training allows your team
                                 to
   48                               be as productive as possible as early as
                                 possible.  Now you can receive
   49                               FreeRTOS training directly from Richard
                                 Barry, CEO of Real Time Engineers
   50                               Ltd, and the world's leading authority on
                                 the world's leading RTOS.
   51                           
   52                               http://www.FreeRTOS.org/plus - A selection
                                 of FreeRTOS ecosystem products,
   53                               including FreeRTOS+Trace - an indispensabl
                                e productivity tool, a DOS
   54                               compatible FAT file system, and our tiny
                                 thread aware UDP/IP stack.
   55                           
   56                               http://www.FreeRTOS.org/labs - Where new
                                 FreeRTOS products go to incubate.
   57                               Come and try FreeRTOS+TCP, our new open
                                 source TCP/IP stack for FreeRTOS.
   58                           
   59                               http://www.OpenRTOS.com - Real Time
                                 Engineers ltd. license FreeRTOS to High
   60                               Integrity Systems ltd. to sell under the
                                 OpenRTOS brand.  Low cost OpenRTOS
   61                               licenses offer ticketed support,
                                 indemnification and commercial middleware.
   62                           
   63                               http://www.SafeRTOS.com - High Integrity
                                 Systems also provide a safety
   64                               engineered and independently SIL3
                                 certified version for use in safety and
   65                               mission critical applications that require
                                 provable dependability.
   66                           
   67                               1 tab == 4 spaces!
   68                           */
   69                           
   70                           #include <freertos_cfg.h>
   71                           
   72                                   RSEG    CODE:CODE(2)
   73                                   thumb
   74                           
   75                                   EXTERN vPortYieldFromISR
   76                                   EXTERN pxCurrentTCB
   77                                   EXTERN vTaskSwitchContext
   78                           
   79                                   PUBLIC vSetMSP
   80                                   PUBLIC pendsv_isr
   81                                   PUBLIC vPortSVCHandler
   82                                   PUBLIC vPortStartFirstTask
   83                                   PUBLIC ulSetInterruptMaskFromISR
   84                                   PUBLIC vClearInterruptMaskFromISR
   85                           
   86                           /*--------------------------------------------
                                ---------------*/
   87                           
   88                           vSetMSP:
   89    00000000 80F30888              msr msp, r0
   90    00000004 7047                  bx lr
   91                           
   92                           /*--------------------------------------------
                                ---------------*/
   93                           
   94                           pendsv_isr:
   95    00000006 EFF30980              mrs r0, psp
   96                           
   97    0000000A 194B                  ldr     r3, =pxCurrentTCB       /* Get
                                                 the location of the current
                                                 TCB. */
   98    0000000C 1A68                  ldr     r2, [r3]
   99                           
  100    0000000E 2038                  subs r0, r0, #32                /* Make
                                              space for the remaining low
                                              registers. */
  101    00000010 1060                  str r0, [r2]                    /* Save
                                             the new top of stack. */
  102    00000012 F0C0                  stmia r0!, {r4-r7}              /*
                                               Store the low registers that are
                                               not saved automatically.
                                               */
  103    00000014 4446                  mov r4, r8                             
                                             /* Store the high registers.
                                             */
  104    00000016 4D46                  mov r5, r9
  105    00000018 5646                  mov r6, r10
  106    0000001A 5F46                  mov r7, r11
  107    0000001C F0C0                  stmia r0!, {r4-r7}
  108                           
  109    0000001E 08B5                  push {r3, r14}
  110                           
  111    00000020 72B6            cpsid i
  112                           
  113    00000022 ........              bl vTaskSwitchContext
  114                                   
  115    00000026 62B6            cpsie i
  116                                   
  117    00000028 0CBC            pop {r2, r3}                  /* lr goes in
                                       r3. r2 now holds tcb pointer. */
  118                           
  119    0000002A 1168                  ldr r1, [r2]
  120    0000002C 0868                  ldr r0, [r1]                    /* The
                                             first item in pxCurrentTCB is the
                                             task top of stack. */
  121    0000002E 1030                  adds r0, r0, #16                /* Move
                                              to the high registers. */
  122    00000030 F0C8                  ldmia r0!, {r4-r7}              /* Pop
                                               the high registers. */
  123    00000032 A046                  mov r8, r4
  124    00000034 A946                  mov r9, r5
  125    00000036 B246                  mov r10, r6
  126    00000038 BB46                  mov r11, r7
  127                           
  128    0000003A 80F30988              msr psp, r0                            
                                             /* Remember the new top of stack
                                             for the task. */
  129                           
  130    0000003E 2038                  subs r0, r0, #32                /* Go
                                              back for the low registers that
                                              are not automatically restored.
                                              */
  131    00000040 F0C8                  ldmia r0!, {r4-r7}              /* Pop
                                               low registers.  */
  132                           
  133    00000042 1847                  bx r3
  134                           
  135                           /*--------------------------------------------
                                ---------------*/
  136                           
  137                           vPortSVCHandler:
  138                                   /* This function is no longer used,
                                 but retained for backward compatibility.
                                 */
  139    00000044 7047                  bx lr
  140                           
  141                           /*--------------------------------------------
                                ---------------*/
  142                           
  143                           vPortStartFirstTask:
  144                                   /* The MSP stack is not reset as,
                                 unlike on M3/4 parts, there is no vector
  145                                   table offset register that can be used
                                 to locate the initial stack value.
  146                                   Not all M0 parts have the application
                                 vector table at address 0. */
  147                           
  148    00000046 0A4B                  ldr     r3, =pxCurrentTCB       /*
                                                 Obtain location of pxCurrentTC
                                                B. */
  149    00000048 1968                  ldr r1, [r3]
  150    0000004A 0868                  ldr r0, [r1]                    /* The
                                             first item in pxCurrentTCB is the
                                             task top of stack. */
  151    0000004C 2030                  adds r0, #32                        /*
                                              Discard everything up to r0.
                                              */
  152    0000004E 80F30988              msr psp, r0                            
                                             /* This is now the new top of
                                             stack to use in the task.
                                             */
  153    00000052 0220                  movs r0, #2                            
                                              /* Switch to the psp stack.
                                              */
  154    00000054 80F31488              msr CONTROL, r0
  155    00000058 3FBC                  pop {r0-r5}                            
                                             /* Pop the registers that are
                                             saved automatically. */
  156    0000005A AE46                  mov lr, r5                             
                                             /* lr is now in r5. */
  157    0000005C 62B6                  cpsie i                                
                                               /* The first task has its
                                               context and interrupts can be
                                               enabled. */
  158    0000005E 00BD                  pop {pc}                               
                                             /* Finally, pop the PC to jump to
                                             the user defined task code.
                                             */
  159                           
  160                           /*--------------------------------------------
                                ---------------*/
  161                           
  162                           ulSetInterruptMaskFromISR:
  163    00000060 EFF31080              mrs r0, PRIMASK
  164    00000064 72B6            cpsid i
  165    00000066 7047            bx lr
  166                           
  167                           /*--------------------------------------------
                                ---------------*/
  168                           
  169                           vClearInterruptMaskFromISR:
  170    00000068 80F31088              msr PRIMASK, r0
  171    0000006C 7047            bx lr
  172                           
  172.1                                  TABLE
  172.2  00000070 ........              Reference on line 97,148
  173                                   END
##############################
#           CRC:0            #
#        Errors:   0         #
#        Warnings: 0         #
#         Bytes: 116         #
##############################



